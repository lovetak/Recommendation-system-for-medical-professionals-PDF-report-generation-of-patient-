{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b58e855c-c9b4-4248-ba30-3c6b4ad1898e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data parsed successfully.\n",
      "Consultation Date: 2024-04-16\n",
      "Consultation Type: Out-Patient\n",
      "Doctor ID: 0\n",
      "Patient ID: 0\n",
      "Consultation ID: 0\n",
      "BCA1 (First Name): Rama Krishnan\n",
      "BCA2 (Middle Name): \n",
      "BCA3 (Last Name): string\n",
      "BCA4 (Email): user@example.com\n",
      "BCA5 (Phone Number): string\n",
      "BCA6 (Gender): Male\n",
      "BCA7 (Blood Group): \n",
      "BCA8 (Date of Birth): 2015-04-16\n",
      "Age is: 9\n",
      "Boy has following conditions: Age:  9\n",
      "Above normal Weight\n",
      "Less than normal Height\n",
      "Above normal BMI\n",
      "Normal Fat\n",
      "Normal Hemoglobin\n",
      "Normal Glucose\n",
      "7-12\n",
      "33\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "\n",
    "json_data = '''\n",
    "{\n",
    "  \"consultation_date\": \"2024-04-16\",\n",
    "  \"consultation_type\": \"Out-Patient\",\n",
    "  \"doctor_id\": 0,\n",
    "  \"patient_id\": 0,\n",
    "  \"consultation_id\": 0,\n",
    "  \"patient\": {\n",
    "    \"first_name\": \"Rama Krishnan\",\n",
    "    \"middle_name\": \"\",\n",
    "    \"last_name\": \"string\",\n",
    "    \"email\": \"user@example.com\",\n",
    "    \"phone_number\": \"string\",\n",
    "    \"gender\": \"Male\",\n",
    "    \"bloodgroup\": \"\",\n",
    "    \"date_of_birth\": \"2015-04-16\",\n",
    "    \"address\": \"string\",\n",
    "    \"pincode\": \"string\",\n",
    "    \"district\": \"string\",\n",
    "    \"state\": \"string\",\n",
    "    \"pan_number\": \"string\",\n",
    "    \"driving_license_number\": \"string\",\n",
    "    \"aadhaar_number\": \"string\",\n",
    "    \"aabha_address\": \"string\",\n",
    "    \"patient_picture\": \"string\",\n",
    "    \"health_account_number\": \"string\",\n",
    "    \"patient_id\": 0,\n",
    "    \"attendant_id\": 0,\n",
    "    \"user_id\": 0,\n",
    "    \"email_verified\": false,\n",
    "    \"phone_number_verified\": false,\n",
    "    \"pan_number_verified\": false,\n",
    "    \"driving_license_number_verified\": false,\n",
    "    \"aadhaar_verified\": false,\n",
    "    \"aabha_consent\": false\n",
    "  },\n",
    "  \"doctor\": {\n",
    "    \"first_name\": \"string\",\n",
    "    \"middle_name\": \"string\",\n",
    "    \"last_name\": \"string\",\n",
    "    \"specialty\": \"string\",\n",
    "    \"qualifications\": \"string\",\n",
    "    \"email\": \"user@example.com\",\n",
    "    \"phone_number\": \"string\",\n",
    "    \"gender\": \"string\",\n",
    "    \"bloodgroup\": \"string\",\n",
    "    \"date_of_birth\": \"2012-04-16\",\n",
    "    \"address\": \"string\",\n",
    "    \"pan_number\": \"string\",\n",
    "    \"driving_license_number\": \"string\",\n",
    "    \"aadhaar_number\": \"string\",\n",
    "    \"registration_number\": \"string\",\n",
    "    \"date_of_renewal\": \"2024-04-16\",\n",
    "    \"account_number\": \"string\",\n",
    "    \"ifsc_code\": \"string\",\n",
    "    \"swift_code\": \"string\",\n",
    "    \"doctor_picture\": \"string\",\n",
    "    \"doctor_signature\": \"string\",\n",
    "    \"doctor_id\": 0,\n",
    "    \"user_id\": 0,\n",
    "    \"email_verified\": false,\n",
    "    \"phone_number_verified\": false,\n",
    "    \"pan_number_verified\": false,\n",
    "    \"driving_license_number_verified\": false,\n",
    "    \"aadhaar_verified\": false\n",
    "  },\n",
    "  \"prescriptions\": [],\n",
    "  \"vitals\": [\n",
    "    {\n",
    "      \"parameter_name\": \"Height\",\n",
    "      \"parameter_unit\": \"cm\",\n",
    "      \"standard_reading\": \"80\",\n",
    "      \"reading\": \"100.11\",\n",
    "      \"device\": \"Stadiometer\",\n",
    "      \"date_of_reading\": \"2024-04-20T10:00:00\",\n",
    "      \"is_flagged\": false,\n",
    "      \"consultation_id\": 1,\n",
    "      \"risk_factor\": \"Low\"\n",
    "    },\n",
    "    {\n",
    "    \"parameter_name\": \"Blood Glucose\",\n",
    "    \"parameter_unit\": \"mg/dL\",\n",
    "    \"standard_reading\": \"80\",\n",
    "    \"reading\": \"101.10\",\n",
    "    \"device\": \"Glucometer\",\n",
    "    \"date_of_reading\": \"2024-04-20T10:00:00\",\n",
    "    \"is_flagged\": false,\n",
    "    \"consultation_id\": 1,\n",
    "    \"risk_factor\": \"Low\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"Weight\",\n",
    "      \"parameter_unit\": \"kg\",\n",
    "      \"standard_reading\": \"70\",\n",
    "      \"reading\": \"160\",\n",
    "      \"device\": \"Scale\",\n",
    "      \"date_of_reading\": \"2024-04-20T10:05:00\",\n",
    "      \"is_flagged\": false,\n",
    "      \"consultation_id\": 1,\n",
    "      \"risk_factor\": \"Medium\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"BMI\",\n",
    "      \"parameter_unit\": \"kg/m2\",\n",
    "      \"standard_reading\": \"22\",\n",
    "      \"reading\": \"360\",\n",
    "      \"device\": \"BMI Calculator\",\n",
    "      \"date_of_reading\": \"2024-04-20T10:10:00\",\n",
    "      \"is_flagged\": false,\n",
    "      \"consultation_id\": 1,\n",
    "      \"risk_factor\": \"Medium\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"Body Fat\",\n",
    "      \"parameter_unit\": \"%\",\n",
    "      \"standard_reading\": \"20\",\n",
    "      \"reading\": \"16\",\n",
    "      \"device\": \"Body Composition Monitor\",\n",
    "      \"date_of_reading\": \"2024-04-20T10:15:00\",\n",
    "      \"is_flagged\": true,\n",
    "      \"consultation_id\": 1,\n",
    "      \"risk_factor\": \"High\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"Systolic Blood Pressure\",\n",
    "      \"parameter_unit\": \"mmHg\",\n",
    "      \"standard_reading\": \"120/80\",\n",
    "      \"reading\": \"85\",\n",
    "      \"device\": \"Blood Pressure Monitor\",\n",
    "      \"date_of_reading\": \"2024-04-20T10:20:00\",\n",
    "      \"is_flagged\": true,\n",
    "      \"consultation_id\": 1,\n",
    "      \"risk_factor\": \"High\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"Blood Glucose\",\n",
    "      \"parameter_unit\": \"mg/dL\",\n",
    "      \"standard_reading\": \"90-130\",\n",
    "      \"reading\": \"115\",\n",
    "      \"device\": \"Glucometer\",\n",
    "      \"date_of_reading\": \"2023-09-14T10:00:00\",\n",
    "      \"is_flagged\": false,\n",
    "      \"consultation_id\": 101,\n",
    "      \"risk_factor\": \"Low\"\n",
    "    },\n",
    "    {\n",
    "      \"parameter_name\": \"Haemoglobin\",\n",
    "      \"parameter_unit\": \"g/dL\",\n",
    "      \"standard_reading\": \"13.5-17.5\",\n",
    "      \"reading\": \"14.2\",\n",
    "      \"device\": \"Hematology Analyzer\",\n",
    "      \"date_of_reading\": \"2023-09-14T10:05:00\",\n",
    "      \"is_flagged\": false,\n",
    "      \"consultation_id\": 101,\n",
    "      \"risk_factor\": \"Normal\"\n",
    "    }\n",
    "  ],\n",
    "  \"rapidtestresults\": []\n",
    "}\n",
    "'''\n",
    "# Parsing the JSON string\n",
    "try:\n",
    "    data_dict = json.loads(json_data)\n",
    "    print(\"Data parsed successfully.\")\n",
    "except json.JSONDecodeError as e:\n",
    "    print(\"JSON decoding failed:\", e)\n",
    "\n",
    "\n",
    "\n",
    "def EHRfunctiontest(json_data):\n",
    "\n",
    "    # You can now parse this JSON string using json.loads to convert it into a Python dictionary\n",
    "    import json\n",
    "    data_dict = json.loads(json_data)\n",
    "\n",
    "    # To access vitals, you could do something like this:\n",
    "    vitals = data_dict['vitals']\n",
    "    patient_info = data_dict['patient']\n",
    "\n",
    "\n",
    "    def get_reading_for_parameter(vitals, parameter):\n",
    "        for vital in vitals:\n",
    "            if vital['parameter_name'] == parameter:\n",
    "                try:\n",
    "                    return float(vital['reading'])\n",
    "                except (ValueError, TypeError):\n",
    "                    return None\n",
    "        return None\n",
    "\n",
    "\n",
    "    # Define a function to extract specific consultation details\n",
    "    def get_consultation_detail(data, detail_name):\n",
    "        \"\"\"\n",
    "        Extracts a specific detail from the consultation data.\n",
    "    \n",
    "        :param data: The complete consultation data as a dictionary.\n",
    "        :param detail_name: The key for the detail to extract.\n",
    "        :return: The value associated with the detail_name in the data, or None if not found.\n",
    "        \"\"\"\n",
    "        return data.get(detail_name, None)\n",
    "\n",
    "    def get_patient_detail(patient_data, detail_name):\n",
    "        \"\"\"\n",
    "        Extracts a specific detail from the patient data within the consultation data.\n",
    "    \n",
    "        :param patient_data: The dictionary containing the patient information.\n",
    "        :param detail_name: The key for the detail to extract.\n",
    "        :return: The value associated with the detail_name in the patient data, or None if not found.\n",
    "        \"\"\"\n",
    "        return patient_data.get(detail_name, None)\n",
    "\n",
    "\n",
    "\n",
    "    def get_parameter_unit(vitals, parameter_name):\n",
    "        \"\"\"\n",
    "        Extracts the parameter unit for a specific parameter from a list of vitals.\n",
    "    \n",
    "        :param vitals: List of dictionaries containing vitals information.\n",
    "        :param parameter_name: The name of the parameter for which the unit is desired.\n",
    "        :return: The unit of the specified parameter or None if not found.\n",
    "        \"\"\"\n",
    "        for vital in vitals:\n",
    "            if vital['parameter_name'] == parameter_name:\n",
    "                return vital['parameter_unit']\n",
    "        return None\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    # Calculation of Age through date of birth\n",
    "    from datetime import datetime\n",
    "\n",
    "    \n",
    "\n",
    "    from datetime import datetime\n",
    "    \n",
    "    def calculate_age(birthdate, consultation_date):\n",
    "        \"\"\"\n",
    "        Calculates age based on the given birthdate and the consultation date.\n",
    "        \n",
    "        :param birthdate: A string in the format 'YYYY-MM-DD' representing the birth date.\n",
    "        :param consultation_date: A string in the format 'YYYY-MM-DD' representing the consultation date.\n",
    "        :return: The age as an integer.\n",
    "        \"\"\"\n",
    "        birthdate = datetime.strptime(birthdate, \"%Y-%m-%d\")\n",
    "        consultation_date = datetime.strptime(consultation_date, \"%Y-%m-%d\")\n",
    "        age = consultation_date.year - birthdate.year - ((consultation_date.month, consultation_date.day) < (birthdate.month, birthdate.day))\n",
    "        return age\n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "    \n",
    "    # Now you can call the function for each parameter and assign the result to a variable\n",
    "\n",
    "        # Example usage of the function\n",
    "    CBA1 = get_consultation_detail(data_dict, \"consultation_date\")\n",
    "    CBA2 = get_consultation_detail(data_dict, \"consultation_type\")\n",
    "    CBA3 = get_consultation_detail(data_dict, \"doctor_id\")\n",
    "    CBA4 = get_consultation_detail(data_dict, \"patient_id\")\n",
    "    CBA5 = get_consultation_detail(data_dict, \"consultation_id\")\n",
    "\n",
    "    print(\"Consultation Date:\", CBA1)  # Output: 2024-04-16\n",
    "    print(\"Consultation Type:\", CBA2)  # Output: Out-Patient\n",
    "    print(\"Doctor ID:\", CBA3)          # Output: 123\n",
    "    print(\"Patient ID:\", CBA4)         # Output: 456\n",
    "    print(\"Consultation ID:\", CBA5) \n",
    "\n",
    "\n",
    "        # Directly assign each patient detail to a variable with the prefix 'BCA'\n",
    "    BCA1 = get_patient_detail(patient_info, \"first_name\")\n",
    "    BCA2 = get_patient_detail(patient_info, \"middle_name\")\n",
    "    BCA3 = get_patient_detail(patient_info, \"last_name\")\n",
    "    BCA4 = get_patient_detail(patient_info, \"email\")\n",
    "    BCA5 = get_patient_detail(patient_info, \"phone_number\")\n",
    "    BCA6 = get_patient_detail(patient_info, \"gender\")\n",
    "    BCA7 = get_patient_detail(patient_info, \"bloodgroup\")\n",
    "    BCA8 = get_patient_detail(patient_info, \"date_of_birth\")\n",
    "    \n",
    "    # Print the variables to verify the correct assignments\n",
    "    print(\"BCA1 (First Name):\", BCA1)\n",
    "    print(\"BCA2 (Middle Name):\", BCA2)\n",
    "    print(\"BCA3 (Last Name):\", BCA3)\n",
    "    print(\"BCA4 (Email):\", BCA4)\n",
    "    print(\"BCA5 (Phone Number):\", BCA5)\n",
    "    print(\"BCA6 (Gender):\", BCA6)\n",
    "    print(\"BCA7 (Blood Group):\", BCA7)\n",
    "    print(\"BCA8 (Date of Birth):\", BCA8)\n",
    "\n",
    "\n",
    "    \n",
    "    birthdate = BCA8\n",
    "    consultation_date = CBA1  # Assuming CBA1 is defined elsewhere in your code as the consultation date\n",
    "    age = calculate_age(birthdate, consultation_date)\n",
    "    print(f\"Age is: {age}\")\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "    Name = BCA1 +\"\"+ BCA2 +\"\"+ BCA3\n",
    "    \n",
    "    # Now you can call the function for each parameter and assign the result to a variable\n",
    "\n",
    "\n",
    "    ABC0 = get_reading_for_parameter(vitals, \"Health_score\")\n",
    "    ABC1 = get_reading_for_parameter(vitals, \"Weight\")\n",
    "    ABC2 = get_reading_for_parameter(vitals, \"Height\")\n",
    "    ABC3 = get_reading_for_parameter(vitals, \"BMI\")\n",
    "    ABC4 = get_reading_for_parameter(vitals, \"Body Fat\")\n",
    "    ABC5 = get_reading_for_parameter(vitals, \"Subcutaneous Fat\")\n",
    "    ABC6 = get_reading_for_parameter(vitals, \"Visceral Fat\")\n",
    "    ABC7 = get_reading_for_parameter(vitals, \"Body Water\")\n",
    "    ABC8 = get_reading_for_parameter(vitals, \"Skeletal Muscle\")\n",
    "    ABC9 = get_reading_for_parameter(vitals, \"Lean Mass\")\n",
    "    ABC10 = get_reading_for_parameter(vitals, \"Bone Mass\")\n",
    "    ABC11 = get_reading_for_parameter(vitals, \"Protein\")\n",
    "    ABC12 = get_reading_for_parameter(vitals, \"BMR\")\n",
    "    ABC13 = get_reading_for_parameter(vitals, \"Metabolic Age\")\n",
    "    ABC14 = get_reading_for_parameter(vitals, \"Health Score\")\n",
    "    ABC15 = get_reading_for_parameter(vitals, \"Right Arm Lean Mass\")\n",
    "    ABC16 = get_reading_for_parameter(vitals, \"Left Arm Lean Mass\")\n",
    "    ABC17 = get_reading_for_parameter(vitals, \"Trunk Lean Mass\")\n",
    "    ABC18 = get_reading_for_parameter(vitals, \"Right Leg Lean Mass\")\n",
    "    ABC19 = get_reading_for_parameter(vitals, \"Left Leg Lean Mass\")\n",
    "    ABC20 = get_reading_for_parameter(vitals, \"Right Arm Fat\")\n",
    "    ABC21 = get_reading_for_parameter(vitals, \"Left Arm Fat\")\n",
    "    ABC22 = get_reading_for_parameter(vitals, \"Right Leg Fat\")\n",
    "    ABC23 = get_reading_for_parameter(vitals, \"Left Leg Fat\")\n",
    "    ABC24 = get_reading_for_parameter(vitals, \"Temperature\")\n",
    "    ABC25 = get_reading_for_parameter(vitals, \"SPO2\")\n",
    "    ABC26 = get_reading_for_parameter(vitals, \"Systolic Blood Pressure\")\n",
    "    ABC27 = get_reading_for_parameter(vitals, \"Diastolic Blood Pressure\")\n",
    "    ABC28 = get_reading_for_parameter(vitals, \"Pulse Rate\")\n",
    "    ABC29 = get_reading_for_parameter(vitals, \"FEV1\")\n",
    "    ABC30 = get_reading_for_parameter(vitals, \"PEF\")\n",
    "    ABC31 = get_reading_for_parameter(vitals, \"Blood Glucose\")\n",
    "    ABC32 = get_reading_for_parameter(vitals, \"Haemoglobin\")\n",
    "    ABC33 = get_reading_for_parameter(vitals, \"Lipid TC\")\n",
    "    ABC34 = get_reading_for_parameter(vitals, \"Lipid TG\")\n",
    "    ABC35 = get_reading_for_parameter(vitals, \"Lipid HDL\")\n",
    "    ABC36 = get_reading_for_parameter(vitals, \"Lipid LDL\")\n",
    "    ABC37 = get_reading_for_parameter(vitals, \"Lipid LDL/HDL\")\n",
    "    ABC38 = get_reading_for_parameter(vitals, \"Lipid non-HDL\")\n",
    "    ABC39 = get_reading_for_parameter(vitals, \"aortic\")\n",
    "    ABC40 = get_reading_for_parameter(vitals, \"pulmonic\")\n",
    "    ABC41 = get_reading_for_parameter(vitals, \"tricuspid\")\n",
    "    ABC42 = get_reading_for_parameter(vitals, \"mitral\")\n",
    "    ABC43 = get_reading_for_parameter(vitals, \"pos0\")\n",
    "    ABC44 = get_reading_for_parameter(vitals, \"pos1\")\n",
    "    ABC45 = get_reading_for_parameter(vitals, \"pos2\")\n",
    "    ABC46 = get_reading_for_parameter(vitals, \"pos3\")\n",
    "    ABC47 = get_reading_for_parameter(vitals, \"pos4\")\n",
    "    ABC48 = get_reading_for_parameter(vitals, \"pos5\")\n",
    "    ABC49 = get_reading_for_parameter(vitals, \"pos6\")\n",
    "    ABC50 = get_reading_for_parameter(vitals, \"pos7\")\n",
    "    ABC51 = get_reading_for_parameter(vitals, \"pos8\")\n",
    "    ABC52 = get_reading_for_parameter(vitals, \"pos9\")\n",
    "    ABC53 = get_reading_for_parameter(vitals, \"pos10\")\n",
    "    ABC54 = get_reading_for_parameter(vitals, \"pos11\")\n",
    "    ABC55 = get_reading_for_parameter(vitals, \"pos12\")\n",
    "    ABC56 = get_reading_for_parameter(vitals, \"pos13\")\n",
    "    ABC57 = get_reading_for_parameter(vitals, \"pos14\")\n",
    "    ABC58 = get_reading_for_parameter(vitals, \"pos15\")\n",
    "    ABC59 = get_reading_for_parameter(vitals, \"pos16\")\n",
    "    ABC60 = get_reading_for_parameter(vitals, \"pos17\")\n",
    "    ABC61 = get_reading_for_parameter(vitals, \"pos18\")\n",
    "    ABC62 = get_reading_for_parameter(vitals, \"pos19\")\n",
    "    ABC63 = get_reading_for_parameter(vitals, \"pos20\")\n",
    "    ABC64 = get_reading_for_parameter(vitals, \"Fat Free Weight\")\n",
    "    ABC65 = get_reading_for_parameter(vitals, \"LMP\")\n",
    "    ABC66 = get_reading_for_parameter(vitals, \"ECG\")\n",
    "    ABC67 = get_reading_for_parameter(vitals, \"Oral Camera\")\n",
    "    ABC68 = get_reading_for_parameter(vitals, \"Ear Camera\")\n",
    "    ABC69 = get_reading_for_parameter(vitals, \"Skin Camera\")\n",
    "    ABC70 = get_reading_for_parameter(vitals, \"Urine Test\")\n",
    "\n",
    "\n",
    "    ACB1 = get_parameter_unit(vitals, \"Weight\")\n",
    "    ACB2 = get_parameter_unit(vitals, \"Height\")\n",
    "    ACB3 = get_parameter_unit(vitals, \"BMI\")\n",
    "    ACB4 = get_parameter_unit(vitals, \"Body Fat\")\n",
    "    ACB5 = get_parameter_unit(vitals, \"Subcutaneous Fat\")\n",
    "    ACB6 = get_parameter_unit(vitals, \"Visceral Fat\")\n",
    "    ACB7 = get_parameter_unit(vitals, \"Body Water\")\n",
    "    ACB8 = get_parameter_unit(vitals, \"Skeletal Muscle\")\n",
    "    ACB9 = get_parameter_unit(vitals, \"Lean Mass\")\n",
    "    ACB10 = get_parameter_unit(vitals, \"Bone Mass\")\n",
    "    ACB11 = get_parameter_unit(vitals, \"Protein\")\n",
    "    ACB12 = get_parameter_unit(vitals, \"BMR\")\n",
    "    ACB13 = get_parameter_unit(vitals, \"Metabolic Age\")\n",
    "    ACB14 = get_parameter_unit(vitals, \"Health Score\")\n",
    "    ACB15 = get_parameter_unit(vitals, \"Right Arm Lean Mass\")\n",
    "    ACB16 = get_parameter_unit(vitals, \"Left Arm Lean Mass\")\n",
    "    ACB17 = get_parameter_unit(vitals, \"Trunk Lean Mass\")\n",
    "    ACB18 = get_parameter_unit(vitals, \"Right Leg Lean Mass\")\n",
    "    ACB19 = get_parameter_unit(vitals, \"Left Leg Lean Mass\")\n",
    "    ACB20 = get_parameter_unit(vitals, \"Right Arm Fat\")\n",
    "    ACB21 = get_parameter_unit(vitals, \"Left Arm Fat\")\n",
    "    ACB22 = get_parameter_unit(vitals, \"Right Leg Fat\")\n",
    "    ACB23 = get_parameter_unit(vitals, \"Left Leg Fat\")\n",
    "    ACB24 = get_parameter_unit(vitals, \"Temperature\")\n",
    "    ACB25 = get_parameter_unit(vitals, \"SPO2\")\n",
    "    ACB26 = get_parameter_unit(vitals, \"Systolic Blood Pressure\")\n",
    "    ACB27 = get_parameter_unit(vitals, \"Diastolic Blood Pressure\")\n",
    "    ACB28 = get_parameter_unit(vitals, \"Pulse Rate\")\n",
    "    ACB29 = get_parameter_unit(vitals, \"FEV1\")\n",
    "    ACB30 = get_parameter_unit(vitals, \"PEF\")\n",
    "    ACB31 = get_parameter_unit(vitals, \"Blood Glucose\")\n",
    "    ACB32 = get_parameter_unit(vitals, \"Haemoglobin\")\n",
    "    ACB33 = get_parameter_unit(vitals, \"Lipid TC\")\n",
    "    ACB34 = get_parameter_unit(vitals, \"Lipid TG\")\n",
    "    ACB35 = get_parameter_unit(vitals, \"Lipid HDL\")\n",
    "    ACB36 = get_parameter_unit(vitals, \"Lipid LDL\")\n",
    "    ACB37 = get_parameter_unit(vitals, \"Lipid LDL/HDL\")\n",
    "    ACB38 = get_parameter_unit(vitals, \"Lipid non-HDL\")\n",
    "    ACB39 = get_parameter_unit(vitals, \"aortic\")\n",
    "    ACB40 = get_parameter_unit(vitals, \"pulmonic\")\n",
    "    ACB41 = get_parameter_unit(vitals, \"tricuspid\")\n",
    "    ACB42 = get_parameter_unit(vitals, \"mitral\")\n",
    "    ACB43 = get_parameter_unit(vitals, \"pos0\")\n",
    "    ACB44 = get_parameter_unit(vitals, \"pos1\")\n",
    "    ACB45 = get_parameter_unit(vitals, \"pos2\")\n",
    "    ACB46 = get_parameter_unit(vitals, \"pos3\")\n",
    "    ACB47 = get_parameter_unit(vitals, \"pos4\")\n",
    "    ACB48 = get_parameter_unit(vitals, \"pos5\")\n",
    "    ACB49 = get_parameter_unit(vitals, \"pos6\")\n",
    "    ACB50 = get_parameter_unit(vitals, \"pos7\")\n",
    "    ACB51 = get_parameter_unit(vitals, \"pos8\")\n",
    "    ACB52 = get_parameter_unit(vitals, \"pos9\")\n",
    "    ACB53 = get_parameter_unit(vitals, \"pos10\")\n",
    "    ACB54 = get_parameter_unit(vitals, \"pos11\")\n",
    "    ACB55 = get_parameter_unit(vitals, \"pos12\")\n",
    "    ACB56 = get_parameter_unit(vitals, \"pos13\")\n",
    "    ACB57 = get_parameter_unit(vitals, \"pos14\")\n",
    "    ACB58 = get_parameter_unit(vitals, \"pos15\")\n",
    "    ACB59 = get_parameter_unit(vitals, \"pos16\")\n",
    "    ACB60 = get_parameter_unit(vitals, \"pos17\")\n",
    "    ACB61 = get_parameter_unit(vitals, \"pos18\")\n",
    "    ACB62 = get_parameter_unit(vitals, \"pos19\")\n",
    "    ACB63 = get_parameter_unit(vitals, \"pos20\")\n",
    "    ACB64 = get_parameter_unit(vitals, \"Fat Free Weight\")\n",
    "    ACB65 = get_parameter_unit(vitals, \"LMP\")\n",
    "    ACB66 = get_parameter_unit(vitals, \"ECG\")\n",
    "    ACB67 = get_parameter_unit(vitals, \"Oral Camera\")\n",
    "    ACB68 = get_parameter_unit(vitals, \"Ear Camera\")\n",
    "    ACB69 = get_parameter_unit(vitals, \"Skin Camera\")\n",
    "    ACB70 = get_parameter_unit(vitals, \"Urine Test\")\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    C1 = None\n",
    "    C2 = None\n",
    "    C3 = None\n",
    "    C4 = None\n",
    "    C5 = None\n",
    "    C6 = None\n",
    "    C7 = None\n",
    "    C8 = None\n",
    "    C9 = None\n",
    "    C10 = None\n",
    "    C11 = None\n",
    "    C12 = None\n",
    "    C13 = None\n",
    "    C14 = None\n",
    "    C15 = None\n",
    "    C16 = None\n",
    "    C17 = None\n",
    "    C18 = None\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    AB1 = None\n",
    "\n",
    "    A11 = age\n",
    "    if age <= 18:\n",
    "        Child = 1\n",
    "    else:\n",
    "        Child = 0\n",
    "\n",
    "\n",
    "    if Child == 1:\n",
    "        if BCA6 == \"Male\":\n",
    "            AB1 = \"boy\"\n",
    "        elif BCA6 == \"Female\":\n",
    "            AB1 = \"girl\"\n",
    "        \n",
    "        \n",
    "\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "      \n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "\n",
    "\n",
    "    if ACB1 is None:\n",
    "        ACB1 = \"\"\n",
    "    if ACB2 is None:\n",
    "        ACB2 = \"\"\n",
    "    if ACB3 is None:\n",
    "        ACB3 = \"\"\n",
    "    if ACB4 is None:\n",
    "        ACB4 = \"\"\n",
    "    if ACB5 is None:\n",
    "        ACB5 = \"\"\n",
    "    if ACB6 is None:\n",
    "        ACB6 = \"\"\n",
    "    if ACB7 is None:\n",
    "        ACB7 = \"\"\n",
    "    if ACB8 is None:\n",
    "        ACB8 = \"\"\n",
    "    if ACB9 is None:\n",
    "        ACB9 = \"\"\n",
    "    if ACB10 is None:\n",
    "        ACB10 = \"\"\n",
    "    if ACB11 is None:\n",
    "        ACB11 = \"\"\n",
    "    if ACB12 is None:\n",
    "        ACB12 = \"\"\n",
    "    if ACB13 is None:\n",
    "        ACB13 = \"\"\n",
    "    if ACB14 is None:\n",
    "        ACB14 = \"\"\n",
    "    if ACB15 is None:\n",
    "        ACB15 = \"\"\n",
    "    if ACB16 is None:\n",
    "        ACB16 = \"\"\n",
    "    if ACB17 is None:\n",
    "        ACB17 = \"\"\n",
    "    if ACB18 is None:\n",
    "        ACB18 = \"\"\n",
    "    if ACB19 is None:\n",
    "        ACB19 = \"\"\n",
    "    if ACB20 is None:\n",
    "        ACB20 = \"\"\n",
    "    if ACB21 is None:\n",
    "        ACB21 = \"\"\n",
    "    if ACB22 is None:\n",
    "        ACB22 = \"\"\n",
    "    if ACB23 is None:\n",
    "        ACB23 = \"\"\n",
    "    if ACB24 is None:\n",
    "        ACB24 = \"\"\n",
    "    if ACB25 is None:\n",
    "        ACB25 = \"\"\n",
    "    if ACB26 is None:\n",
    "        ACB26 = \"\"\n",
    "    if ACB27 is None:\n",
    "        ACB27 = \"\"\n",
    "    if ACB28 is None:\n",
    "        ACB28 = \"\"\n",
    "    if ACB29 is None:\n",
    "        ACB29 = \"\"\n",
    "    if ACB30 is None:\n",
    "        ACB30 = \"\"\n",
    "    if ACB31 is None:\n",
    "        ACB31 = \"\"\n",
    "    if ACB32 is None:\n",
    "        ACB32 = \"\"\n",
    "    if ACB33 is None:\n",
    "        ACB33 = \"\"\n",
    "    if ACB34 is None:\n",
    "        ACB34 = \"\"\n",
    "    if ACB35 is None:\n",
    "        ACB35 = \"\"\n",
    "    if ACB36 is None:\n",
    "        ACB36 = \"\"\n",
    "    if ACB37 is None:\n",
    "        ACB37 = \"\"\n",
    "    if ACB38 is None:\n",
    "        ACB38 = \"\"\n",
    "    if ACB39 is None:\n",
    "        ACB39 = \"\"\n",
    "    if ACB40 is None:\n",
    "        ACB40 = \"\"\n",
    "    if ACB41 is None:\n",
    "        ACB41 = \"\"\n",
    "    if ACB42 is None:\n",
    "        ACB42 = \"\"\n",
    "    if ACB43 is None:\n",
    "        ACB43 = \"\"\n",
    "    if ACB44 is None:\n",
    "        ACB44 = \"\"\n",
    "    if ACB45 is None:\n",
    "        ACB45 = \"\"\n",
    "    if ACB46 is None:\n",
    "        ACB46 = \"\"\n",
    "    if ACB47 is None:\n",
    "        ACB47 = \"\"\n",
    "    if ACB48 is None:\n",
    "        ACB48 = \"\"\n",
    "    if ACB49 is None:\n",
    "        ACB49 = \"\"\n",
    "    if ACB50 is None:\n",
    "        ACB50 = \"\"\n",
    "    if ACB51 is None:\n",
    "        ACB51 = \"\"\n",
    "    if ACB52 is None:\n",
    "        ACB52 = \"\"\n",
    "    if ACB53 is None:\n",
    "        ACB53 = \"\"\n",
    "    if ACB54 is None:\n",
    "        ACB54 = \"\"\n",
    "    if ACB55 is None:\n",
    "        ACB55 = \"\"\n",
    "    if ACB56 is None:\n",
    "        ACB56 = \"\"\n",
    "    if ACB57 is None:\n",
    "        ACB57 = \"\"\n",
    "    if ACB58 is None:\n",
    "        ACB58 = \"\"\n",
    "    if ACB59 is None:\n",
    "        ACB59 = \"\"\n",
    "    if ACB60 is None:\n",
    "        ACB60 = \"\"\n",
    "    if ACB61 is None:\n",
    "        ACB61 = \"\"\n",
    "    if ACB62 is None:\n",
    "        ACB62 = \"\"\n",
    "    if ACB63 is None:\n",
    "        ACB63 = \"\"\n",
    "    if ACB64 is None:\n",
    "        ACB64 = \"\"\n",
    "    if ACB65 is None:\n",
    "        ACB65 = \"\"\n",
    "    if ACB66 is None:\n",
    "        ACB66 = \"\"\n",
    "    if ACB67 is None:\n",
    "        ACB67 = \"\"\n",
    "    if ACB68 is None:\n",
    "        ACB68 = \"\"\n",
    "    if ACB69 is None:\n",
    "        ACB69 = \"\"\n",
    "    if ACB70 is None:\n",
    "        ACB70 = \"\"\n",
    "\n",
    "\n",
    "   # Assuming all ABC values are defined beforehand\n",
    "\n",
    "\n",
    "    # For ABC1\n",
    "    if ABC1 is None:\n",
    "        Alpha1 = 4\n",
    "        T1 = 'Reading not taken'\n",
    "        L1 = \"Weight\"\n",
    "        LG1 = \"N/A\"\n",
    "        ABC1 = \"\"\n",
    "    elif isinstance(ABC1, float):\n",
    "        ABC1 = int(ABC1)\n",
    "        L1 = \"Weight\"\n",
    "        LG1 = ABC1\n",
    "        T1 = ABC1\n",
    "        T1 = str(T1)\n",
    "        Alpha1 = 5\n",
    "    else:\n",
    "        T1 = \"Reading not correct\"\n",
    "        L1 = \"Weight\"\n",
    "        Alpha1 = 0\n",
    "        LG1 = T1\n",
    "    \n",
    "    # For ABC2\n",
    "    if ABC2 is None:\n",
    "        Alpha2 = 4\n",
    "        T2 = 'Reading not taken'\n",
    "        L2 = \"Height\"\n",
    "        LG2 = \"N/A\"\n",
    "        ABC2 = \"\"\n",
    "    elif isinstance(ABC2, float):\n",
    "        ABC2 = int(ABC2)\n",
    "        L2 = \"Height\"\n",
    "        LG2 = ABC2\n",
    "        T2 = ABC2\n",
    "        T2 = str(T2)\n",
    "        Alpha2 = 5\n",
    "    else:\n",
    "        T2 = \"Reading not correct\"\n",
    "        L2 = \"Height\"\n",
    "        Alpha2 = 0\n",
    "        LG2 = T2\n",
    "    \n",
    "    # For ABC3\n",
    "    if ABC3 is None:\n",
    "        Alpha3 = 4\n",
    "        T3 = 'Reading not taken'\n",
    "        L3 = \"BMI\"\n",
    "        LG3 = \"N/A\"\n",
    "        ABC3 = \"\"\n",
    "    elif isinstance(ABC3, float):\n",
    "        ABC3 = int(ABC3)\n",
    "        L3 = \"BMI\"\n",
    "        LG3 = ABC3\n",
    "        T3 = ABC3\n",
    "        T3 = str(T3)\n",
    "        Alpha3 = 5\n",
    "    else:\n",
    "        T3 = \"Reading not correct\"\n",
    "        L3 = \"BMI\"\n",
    "        Alpha3 = 0\n",
    "        LG3 = T3\n",
    "    \n",
    "    # For ABC4\n",
    "    if ABC4 is None:\n",
    "        Alpha4 = 4\n",
    "        T4 = 'Reading not taken'\n",
    "        L4 = \"Body Fat\"\n",
    "        LG4 = \"N/A\"\n",
    "        ABC4 = \"\"\n",
    "    elif isinstance(ABC4, float):\n",
    "        ABC4 = int(ABC4)\n",
    "        L4 = \"Body Fat\"\n",
    "        LG4 = ABC4\n",
    "        T4 = ABC4\n",
    "        T4 = str(T4)\n",
    "        Alpha4 = 5\n",
    "    else:\n",
    "        T4 = \"Reading not correct\"\n",
    "        L4 = \"Body Fat\"\n",
    "        Alpha4 = 0\n",
    "        LG4 = T4\n",
    "    \n",
    "    # For ABC5\n",
    "    if ABC5 is None:\n",
    "        Alpha5 = 4\n",
    "        T5 = 'Reading not taken'\n",
    "        L5 = \"Subcutaneous Fat\"\n",
    "        LG5 = \"N/A\"\n",
    "        ABC5 = \"\"\n",
    "    elif isinstance(ABC5, float):\n",
    "        ABC5 = int(ABC5)\n",
    "        L5 = \"Subcutaneous Fat\"\n",
    "        LG5 = ABC5\n",
    "        T5 = ABC5\n",
    "        T5 = str(T5)\n",
    "        Alpha5 = 5\n",
    "    else:\n",
    "        T5 = \"Reading not correct\"\n",
    "        L5 = \"Subcutaneous Fat\"\n",
    "        Alpha5 = 0\n",
    "        LG5 = T5\n",
    "    \n",
    "    # For ABC6\n",
    "    if ABC6 is None:\n",
    "        Alpha6 = 4\n",
    "        T6 = 'Reading not taken'\n",
    "        L6 = \"Visceral Fat\"\n",
    "        LG6 = \"N/A\"\n",
    "        ABC6 = \"\"\n",
    "    elif isinstance(ABC6, float):\n",
    "        ABC6 = int(ABC6)\n",
    "        L6 = \"Visceral Fat\"\n",
    "        LG6 = ABC6\n",
    "        T6 = ABC6\n",
    "        T6 = str(T6)\n",
    "        Alpha6 = 5\n",
    "    else:\n",
    "        T6 = \"Reading not correct\"\n",
    "        L6 = \"Visceral Fat\"\n",
    "        Alpha6 = 0\n",
    "        LG6 = T6\n",
    "    \n",
    "    # For ABC7\n",
    "    if ABC7 is None:\n",
    "        Alpha7 = 4\n",
    "        T7 = 'Reading not taken'\n",
    "        L7 = \"Body Water\"\n",
    "        LG7 = \"N/A\"\n",
    "        ABC7 = \"\"\n",
    "    elif isinstance(ABC7, float):\n",
    "        ABC7 = int(ABC7)\n",
    "        L7 = \"Body Water\"\n",
    "        LG7 = ABC7\n",
    "        T7 = ABC7\n",
    "        T7 = str(T7)\n",
    "        Alpha7 = 5\n",
    "    else:\n",
    "        T7 = \"Reading not correct\"\n",
    "        L7 = \"Body Water\"\n",
    "        Alpha7 = 0\n",
    "        LG7 = T7\n",
    "    \n",
    "    # For ABC8\n",
    "    if ABC8 is None:\n",
    "        Alpha8 = 4\n",
    "        T8 = 'Reading not taken'\n",
    "        L8 = \"Skeletal Muscle\"\n",
    "        LG8 = \"N/A\"\n",
    "        ABC8 = \"\"\n",
    "    elif isinstance(ABC8, float):\n",
    "        ABC8 = int(ABC8)\n",
    "        L8 = \"Skeletal Muscle\"\n",
    "        LG8 = ABC8\n",
    "        T8 = ABC8\n",
    "        T8 = str(T8)\n",
    "        Alpha8 = 5\n",
    "    else:\n",
    "        T8 = \"Reading not correct\"\n",
    "        L8 = \"Skeletal Muscle\"\n",
    "        Alpha8 = 0\n",
    "        LG8 = T8\n",
    "    \n",
    "    # For ABC9\n",
    "    if ABC9 is None:\n",
    "        Alpha9 = 4\n",
    "        T9 = 'Reading not taken'\n",
    "        L9 = \"Lean Mass\"\n",
    "        LG9 = \"N/A\"\n",
    "        ABC9 = \"\"\n",
    "    elif isinstance(ABC9, float):\n",
    "        ABC9 = int(ABC9)\n",
    "        L9 = \"Lean Mass\"\n",
    "        LG9 = ABC9\n",
    "        T9 = ABC9\n",
    "        T9 = str(T9)\n",
    "        Alpha9 = 5\n",
    "    else:\n",
    "        T9 = \"Reading not correct\"\n",
    "        L9 = \"Lean Mass\"\n",
    "        Alpha9 = 0\n",
    "        LG9 = T9\n",
    "    \n",
    "    # For ABC10\n",
    "    if ABC10 is None:\n",
    "        Alpha10 = 4\n",
    "        T10 = 'Reading not taken'\n",
    "        L10 = \"Bone Mass\"\n",
    "        LG10 = \"N/A\"\n",
    "        ABC10 = \"\"\n",
    "    elif isinstance(ABC10, float):\n",
    "        ABC10 = int(ABC10)\n",
    "        L10 = \"Bone Mass\"\n",
    "        LG10 = ABC10\n",
    "        T10 = ABC10\n",
    "        T10 = str(T10)\n",
    "        Alpha10 = 5\n",
    "    else:\n",
    "        T10 = \"Reading not correct\"\n",
    "        L10 = \"Bone Mass\"\n",
    "        Alpha10 = 0\n",
    "        LG10 = T10\n",
    "    \n",
    "    # For ABC11\n",
    "    if ABC11 is None:\n",
    "        Alpha11 = 4\n",
    "        T11 = 'Reading not taken'\n",
    "        L11 = \"Protein\"\n",
    "        LG11 = \"N/A\"\n",
    "        ABC11 = \"\"\n",
    "    elif isinstance(ABC11, float):\n",
    "        ABC11 = int(ABC11)\n",
    "        L11 = \"Protein\"\n",
    "        LG11 = ABC11\n",
    "        T11 = ABC11\n",
    "        T11 = str(T11)\n",
    "        Alpha11 = 5\n",
    "    else:\n",
    "        T11 = \"Reading not correct\"\n",
    "        L11 = \"Protein\"\n",
    "        Alpha11 = 0\n",
    "        LG11 = T11\n",
    "    \n",
    "    # For ABC12\n",
    "    if ABC12 is None:\n",
    "        Alpha12 = 4\n",
    "        T12 = 'Reading not taken'\n",
    "        L12 = \"BMR\"\n",
    "        LG12 = \"N/A\"\n",
    "        ABC12 = \"\"\n",
    "    elif isinstance(ABC12, float):\n",
    "        ABC12 = int(ABC12)\n",
    "        L12 = \"BMR\"\n",
    "        LG12 = ABC12\n",
    "        T12 = ABC12\n",
    "        T12 = str(T12)\n",
    "        Alpha12 = 5\n",
    "    else:\n",
    "        T12 = \"Reading not correct\"\n",
    "        L12 = \"BMR\"\n",
    "        Alpha12 = 0\n",
    "        LG12 = T12\n",
    "    \n",
    "    # For ABC13\n",
    "    if ABC13 is None:\n",
    "        Alpha13 = 4\n",
    "        T13 = 'Reading not taken'\n",
    "        L13 = \"Metabolic Age\"\n",
    "        LG13 = \"N/A\"\n",
    "        ABC13 = \"\"\n",
    "    elif isinstance(ABC13, float):\n",
    "        ABC13 = int(ABC13)\n",
    "        L13 = \"Metabolic Age\"\n",
    "        LG13 = ABC13\n",
    "        T13 = ABC13\n",
    "        T13 = str(T13)\n",
    "        Alpha13 = 5\n",
    "    else:\n",
    "        T13 = \"Reading not correct\"\n",
    "        L13 = \"Metabolic Age\"\n",
    "        Alpha13 = 0\n",
    "        LG13 = T13\n",
    "    \n",
    "    # For ABC14\n",
    "    if ABC14 is None:\n",
    "        Alpha14 = 4\n",
    "        T14 = 'Reading not taken'\n",
    "        L14 = \"Health Score\"\n",
    "        LG14 = \"N/A\"\n",
    "        ABC14 = \"\"\n",
    "    elif isinstance(ABC14, float):\n",
    "        ABC14 = int(ABC14)\n",
    "        L14 = \"Health Score\"\n",
    "        LG14 = ABC14\n",
    "        T14 = ABC14\n",
    "        T14 = str(T14)\n",
    "        Alpha14 = 5\n",
    "    else:\n",
    "        T14 = \"Reading not correct\"\n",
    "        L14 = \"Health Score\"\n",
    "        Alpha14 = 0\n",
    "        LG14 = T14\n",
    "    \n",
    "    # For ABC15\n",
    "    if ABC15 is None:\n",
    "        Alpha15 = 4\n",
    "        T15 = 'Reading not taken'\n",
    "        L15 = \"Right Arm Lean Mass\"\n",
    "        LG15 = \"N/A\"\n",
    "        ABC15 = \"\"\n",
    "    elif isinstance(ABC15, float):\n",
    "        ABC15 = int(ABC15)\n",
    "        L15 = \"Right Arm Lean Mass\"\n",
    "        LG15 = ABC15\n",
    "        T15 = ABC15\n",
    "        T15 = str(T15)\n",
    "        Alpha15 = 5\n",
    "    else:\n",
    "        T15 = \"Reading not correct\"\n",
    "        L15 = \"Right Arm Lean Mass\"\n",
    "        Alpha15 = 0\n",
    "        LG15 = T15\n",
    "    \n",
    "    # For ABC16\n",
    "    if ABC16 is None:\n",
    "        Alpha16 = 4\n",
    "        T16 = 'Reading not taken'\n",
    "        L16 = \"Left Arm Lean Mass\"\n",
    "        LG16 = \"N/A\"\n",
    "        ABC16 = \"\"\n",
    "    elif isinstance(ABC16, float):\n",
    "        ABC16 = int(ABC16)\n",
    "        L16 = \"Left Arm Lean Mass\"\n",
    "        LG16 = ABC16\n",
    "        T16 = ABC16\n",
    "        T16 = str(T16)\n",
    "        Alpha16 = 5\n",
    "    else:\n",
    "        T16 = \"Reading not correct\"\n",
    "        L16 = \"Left Arm Lean Mass\"\n",
    "        Alpha16 = 0\n",
    "        LG16 = T16\n",
    "    \n",
    "    # For ABC17\n",
    "    if ABC17 is None:\n",
    "        Alpha17 = 4\n",
    "        T17 = 'Reading not taken'\n",
    "        L17 = \"Trunk Lean Mass\"\n",
    "        LG17 = \"N/A\"\n",
    "        ABC17 = \"\"\n",
    "    elif isinstance(ABC17, float):\n",
    "        ABC17 = int(ABC17)\n",
    "        L17 = \"Trunk Lean Mass\"\n",
    "        LG17 = ABC17\n",
    "        T17 = ABC17\n",
    "        T17 = str(T17)\n",
    "        Alpha17 = 5\n",
    "    else:\n",
    "        T17 = \"Reading not correct\"\n",
    "        L17 = \"Trunk Lean Mass\"\n",
    "        Alpha17 = 0\n",
    "        LG17 = T17\n",
    "    \n",
    "    # For ABC18\n",
    "    if ABC18 is None:\n",
    "        Alpha18 = 4\n",
    "        T18 = 'Reading not taken'\n",
    "        L18 = \"Right Leg Lean Mass\"\n",
    "        LG18 = \"N/A\"\n",
    "        ABC18 = \"\"\n",
    "    elif isinstance(ABC18, float):\n",
    "        ABC18 = int(ABC18)\n",
    "        L18 = \"Right Leg Lean Mass\"\n",
    "        LG18 = ABC18\n",
    "        T18 = ABC18\n",
    "        T18 = str(T18)\n",
    "        Alpha18 = 5\n",
    "    else:\n",
    "        T18 = \"Reading not correct\"\n",
    "        L18 = \"Right Leg Lean Mass\"\n",
    "        Alpha18 = 0\n",
    "        LG18 = T18\n",
    "    \n",
    "    # For ABC19\n",
    "    if ABC19 is None:\n",
    "        Alpha19 = 4\n",
    "        T19 = 'Reading not taken'\n",
    "        L19 = \"Left Leg Lean Mass\"\n",
    "        LG19 = \"N/A\"\n",
    "        ABC19 = \"\"\n",
    "    elif isinstance(ABC19, float):\n",
    "        ABC19 = int(ABC19)\n",
    "        L19 = \"Left Leg Lean Mass\"\n",
    "        LG19 = ABC19\n",
    "        T19 = ABC19\n",
    "        T19 = str(T19)\n",
    "        Alpha19 = 5\n",
    "    else:\n",
    "        T19 = \"Reading not correct\"\n",
    "        L19 = \"Left Leg Lean Mass\"\n",
    "        Alpha19 = 0\n",
    "        LG19 = T19\n",
    "    \n",
    "    # For ABC20\n",
    "    if ABC20 is None:\n",
    "        Alpha20 = 4\n",
    "        T20 = 'Reading not taken'\n",
    "        L20 = \"Right Arm Fat\"\n",
    "        LG20 = \"N/A\"\n",
    "        ABC20 = \"\"\n",
    "    elif isinstance(ABC20, float):\n",
    "        ABC20 = int(ABC20)\n",
    "        L20 = \"Right Arm Fat\"\n",
    "        LG20 = ABC20\n",
    "        T20 = ABC20\n",
    "        T20 = str(T20)\n",
    "        Alpha20 = 5\n",
    "    else:\n",
    "        T20 = \"Reading not correct\"\n",
    "        L20 = \"Right Arm Fat\"\n",
    "        Alpha20 = 0\n",
    "        LG20 = T20\n",
    "    \n",
    "    # For ABC21\n",
    "    if ABC21 is None:\n",
    "        Alpha21 = 4\n",
    "        T21 = 'Reading not taken'\n",
    "        L21 = \"Left Arm Fat\"\n",
    "        LG21 = \"N/A\"\n",
    "        ABC21 = \"\"\n",
    "    elif isinstance(ABC21, float):\n",
    "        ABC21 = int(ABC21)\n",
    "        L21 = \"Left Arm Fat\"\n",
    "        LG21 = ABC21\n",
    "        T21 = ABC21\n",
    "        T21 = str(T21)\n",
    "        Alpha21 = 5\n",
    "    else:\n",
    "        T21 = \"Reading not correct\"\n",
    "        L21 = \"Left Arm Fat\"\n",
    "        Alpha21 = 0\n",
    "        LG21 = T21\n",
    "    \n",
    "    # For ABC22\n",
    "    if ABC22 is None:\n",
    "        Alpha22 = 4\n",
    "        T22 = 'Reading not taken'\n",
    "        L22 = \"Right Leg Fat\"\n",
    "        LG22 = \"N/A\"\n",
    "        ABC22 = \"\"\n",
    "    elif isinstance(ABC22, float):\n",
    "        ABC22 = int(ABC22)\n",
    "        L22 = \"Right Leg Fat\"\n",
    "        LG22 = ABC22\n",
    "        T22 = ABC22\n",
    "        T22 = str(T22)\n",
    "        Alpha22 = 5\n",
    "    else:\n",
    "        T22 = \"Reading not correct\"\n",
    "        L22 = \"Right Leg Fat\"\n",
    "        Alpha22 = 0\n",
    "        LG22 = T22\n",
    "    \n",
    "    # For ABC23\n",
    "    if ABC23 is None:\n",
    "        Alpha23 = 4\n",
    "        T23 = 'Reading not taken'\n",
    "        L23 = \"Left Leg Fat\"\n",
    "        LG23 = \"N/A\"\n",
    "        ABC23 = \"\"\n",
    "    elif isinstance(ABC23, float):\n",
    "        ABC23 = int(ABC23)\n",
    "        L23 = \"Left Leg Fat\"\n",
    "        LG23 = ABC23\n",
    "        T23 = ABC23\n",
    "        T23 = str(T23)\n",
    "        Alpha23 = 5\n",
    "    else:\n",
    "        T23 = \"Reading not correct\"\n",
    "        L23 = \"Left Leg Fat\"\n",
    "        Alpha23 = 0\n",
    "        LG23 = T23\n",
    "    \n",
    "    # For ABC24\n",
    "    if ABC24 is None:\n",
    "        Alpha24 = 4\n",
    "        T24 = 'Reading not taken'\n",
    "        L24 = \"Temperature\"\n",
    "        LG24 = \"N/A\"\n",
    "        ABC24 = \"\"\n",
    "    elif isinstance(ABC24, float):\n",
    "        ABC24 = int(ABC24)\n",
    "        L24 = \"Temperature\"\n",
    "        LG24 = ABC24\n",
    "        T24 = ABC24\n",
    "        T24 = str(T24)\n",
    "        Alpha24 = 5\n",
    "    else:\n",
    "        T24 = \"Reading not correct\"\n",
    "        L24 = \"Temperature\"\n",
    "        Alpha24 = 0\n",
    "        LG24 = T24\n",
    "    \n",
    "    # For ABC25\n",
    "    if ABC25 is None:\n",
    "        Alpha25 = 4\n",
    "        T25 = 'Reading not taken'\n",
    "        L25 = \"SPO2\"\n",
    "        LG25 = \"N/A\"\n",
    "        ABC25 = \"\"\n",
    "    elif isinstance(ABC25, float):\n",
    "        ABC25 = int(ABC25)\n",
    "        L25 = \"SPO2\"\n",
    "        LG25 = ABC25\n",
    "        T25 = ABC25\n",
    "        T25 = str(T25)\n",
    "        Alpha25 = 5\n",
    "    else:\n",
    "        T25 = \"Reading not correct\"\n",
    "        L25 = \"SPO2\"\n",
    "        Alpha25 = 0\n",
    "        LG25 = T25\n",
    "    \n",
    "    # For ABC26\n",
    "    if ABC26 is None:\n",
    "        Alpha26 = 4\n",
    "        T26 = 'Reading not taken'\n",
    "        L26 = \"Systolic Blood Pressure\"\n",
    "        LG26 = \"N/A\"\n",
    "        ABC26 = \"\"\n",
    "    elif isinstance(ABC26, float):\n",
    "        ABC26 = int(ABC26)\n",
    "        L26 = \"Systolic Blood Pressure\"\n",
    "        LG26 = ABC26\n",
    "        T26 = ABC26\n",
    "        T26 = str(T26)\n",
    "        Alpha26 = 5\n",
    "    else:\n",
    "        T26 = \"Reading not correct\"\n",
    "        L26 = \"Systolic Blood Pressure\"\n",
    "        Alpha26 = 0\n",
    "        LG26 = T26\n",
    "    \n",
    "    # For ABC27\n",
    "    if ABC27 is None:\n",
    "        Alpha27 = 4\n",
    "        T27 = 'Reading not taken'\n",
    "        L27 = \"Diastolic Blood Pressure\"\n",
    "        LG27 = \"N/A\"\n",
    "        ABC27 = \"\"\n",
    "    elif isinstance(ABC27, float):\n",
    "        ABC27 = int(ABC27)\n",
    "        L27 = \"Diastolic Blood Pressure\"\n",
    "        LG27 = ABC27\n",
    "        T27 = ABC27\n",
    "        T27 = str(T27)\n",
    "        Alpha27 = 5\n",
    "    else:\n",
    "        T27 = \"Reading not correct\"\n",
    "        L27 = \"Diastolic Blood Pressure\"\n",
    "        Alpha27 = 0\n",
    "        LG27 = T27\n",
    "    \n",
    "    # For ABC28\n",
    "    if ABC28 is None:\n",
    "        Alpha28 = 4\n",
    "        T28 = 'Reading not taken'\n",
    "        L28 = \"Pulse Rate\"\n",
    "        LG28 = \"N/A\"\n",
    "        ABC28 = \"\"\n",
    "    elif isinstance(ABC28, float):\n",
    "        ABC28 = int(ABC28)\n",
    "        L28 = \"Pulse Rate\"\n",
    "        LG28 = ABC28\n",
    "        T28 = ABC28\n",
    "        T28 = str(T28)\n",
    "        Alpha28 = 5\n",
    "    else:\n",
    "        T28 = \"Reading not correct\"\n",
    "        L28 = \"Pulse Rate\"\n",
    "        Alpha28 = 0\n",
    "        LG28 = T28\n",
    "    \n",
    "    # For ABC29\n",
    "    if ABC29 is None:\n",
    "        Alpha29 = 4\n",
    "        T29 = 'Reading not taken'\n",
    "        L29 = \"FEV1\"\n",
    "        LG29 = \"N/A\"\n",
    "        ABC29 = \"\"\n",
    "    elif isinstance(ABC29, float):\n",
    "        ABC29 = int(ABC29)\n",
    "        L29 = \"FEV1\"\n",
    "        LG29 = ABC29\n",
    "        T29 = ABC29\n",
    "        T29 = str(T29)\n",
    "        Alpha29 = 5\n",
    "    else:\n",
    "        T29 = \"Reading not correct\"\n",
    "        L29 = \"FEV1\"\n",
    "        Alpha29 = 0\n",
    "        LG29 = T29\n",
    "    \n",
    "    # For ABC30\n",
    "    if ABC30 is None:\n",
    "        Alpha30 = 4\n",
    "        T30 = 'Reading not taken'\n",
    "        L30 = \"PEF\"\n",
    "        LG30 = \"N/A\"\n",
    "        ABC30 = \"\"\n",
    "    elif isinstance(ABC30, float):\n",
    "        ABC30 = int(ABC30)\n",
    "        L30 = \"PEF\"\n",
    "        LG30 = ABC30\n",
    "        T30 = ABC30\n",
    "        T30 = str(T30)\n",
    "        Alpha30 = 5\n",
    "    else:\n",
    "        T30 = \"Reading not correct\"\n",
    "        L30 = \"PEF\"\n",
    "        Alpha30 = 0\n",
    "        LG30 = T30\n",
    "    \n",
    "    # For ABC31\n",
    "    if ABC31 is None:\n",
    "        Alpha31 = 4\n",
    "        T31 = 'Reading not taken'\n",
    "        L31 = \"Blood Glucose\"\n",
    "        LG31 = \"N/A\"\n",
    "        ABC31 = \"\"\n",
    "    elif isinstance(ABC31, float):\n",
    "        ABC31 = int(ABC31)\n",
    "        L31 = \"Blood Glucose\"\n",
    "        LG31 = ABC31\n",
    "        T31 = ABC31\n",
    "        T31 = str(T31)\n",
    "        Alpha31 = 5\n",
    "    else:\n",
    "        T31 = \"Reading not correct\"\n",
    "        L31 = \"Blood Glucose\"\n",
    "        Alpha31 = 0\n",
    "        LG31 = T31\n",
    "    \n",
    "    # For ABC32\n",
    "    if ABC32 is None:\n",
    "        Alpha32 = 4\n",
    "        T32 = 'Reading not taken'\n",
    "        L32 = \"Haemoglobin\"\n",
    "        LG32 = \"N/A\"\n",
    "        ABC32 = \"\"\n",
    "    elif isinstance(ABC32, float):\n",
    "        ABC32 = int(ABC32)\n",
    "        L32 = \"Haemoglobin\"\n",
    "        LG32 = ABC32\n",
    "        T32 = ABC32\n",
    "        T32 = str(T32)\n",
    "        Alpha32 = 5\n",
    "    else:\n",
    "        T32 = \"Reading not correct\"\n",
    "        L32 = \"Haemoglobin\"\n",
    "        Alpha32 = 0\n",
    "        LG32 = T32\n",
    "    \n",
    "    # For ABC33\n",
    "    if ABC33 is None:\n",
    "        Alpha33 = 4\n",
    "        T33 = 'Reading not taken'\n",
    "        L33 = \"Lipid TC\"\n",
    "        LG33 = \"N/A\"\n",
    "        ABC33 = \"\"\n",
    "    elif isinstance(ABC33, float):\n",
    "        ABC33 = int(ABC33)\n",
    "        L33 = \"Lipid TC\"\n",
    "        LG33 = ABC33\n",
    "        T33 = ABC33\n",
    "        T33 = str(T33)\n",
    "        Alpha33 = 5\n",
    "    else:\n",
    "        T33 = \"Reading not correct\"\n",
    "        L33 = \"Lipid TC\"\n",
    "        Alpha33 = 0\n",
    "        LG33 = T33\n",
    "    \n",
    "    # For ABC34\n",
    "    if ABC34 is None:\n",
    "        Alpha34 = 4\n",
    "        T34 = 'Reading not taken'\n",
    "        L34 = \"Lipid TG\"\n",
    "        LG34 = \"N/A\"\n",
    "        ABC34 = \"\"\n",
    "    elif isinstance(ABC34, float):\n",
    "        ABC34 = int(ABC34)\n",
    "        L34 = \"Lipid TG\"\n",
    "        LG34 = ABC34\n",
    "        T34 = ABC34\n",
    "        T34 = str(T34)\n",
    "        Alpha34 = 5\n",
    "    else:\n",
    "        T34 = \"Reading not correct\"\n",
    "        L34 = \"Lipid TG\"\n",
    "        Alpha34 = 0\n",
    "        LG34 = T34\n",
    "    \n",
    "    # For ABC35\n",
    "    if ABC35 is None:\n",
    "        Alpha35 = 4\n",
    "        T35 = 'Reading not taken'\n",
    "        L35 = \"Lipid HDL\"\n",
    "        LG35 = \"N/A\"\n",
    "        ABC35 = \"\"\n",
    "    elif isinstance(ABC35, float):\n",
    "        ABC35 = int(ABC35)\n",
    "        L35 = \"Lipid HDL\"\n",
    "        LG35 = ABC35\n",
    "        T35 = ABC35\n",
    "        T35 = str(T35)\n",
    "        Alpha35 = 5\n",
    "    else:\n",
    "        T35 = \"Reading not correct\"\n",
    "        L35 = \"Lipid HDL\"\n",
    "        Alpha35 = 0\n",
    "        LG35 = T35\n",
    "    \n",
    "    # For ABC36\n",
    "    if ABC36 is None:\n",
    "        Alpha36 = 4\n",
    "        T36 = 'Reading not taken'\n",
    "        L36 = \"Lipid LDL\"\n",
    "        LG36 = \"N/A\"\n",
    "        ABC36 = \"\"\n",
    "    elif isinstance(ABC36, float):\n",
    "        ABC36 = int(ABC36)\n",
    "        L36 = \"Lipid LDL\"\n",
    "        LG36 = ABC36\n",
    "        T36 = ABC36\n",
    "        T36 = str(T36)\n",
    "        Alpha36 = 5\n",
    "    else:\n",
    "        T36 = \"Reading not correct\"\n",
    "        L36 = \"Lipid LDL\"\n",
    "        Alpha36 = 0\n",
    "        LG36 = T36\n",
    "    \n",
    "    # For ABC37\n",
    "    if ABC37 is None:\n",
    "        Alpha37 = 4\n",
    "        T37 = 'Reading not taken'\n",
    "        L37 = \"Lipid LDL/HDL\"\n",
    "        LG37 = \"N/A\"\n",
    "        ABC37 = \"\"\n",
    "    elif isinstance(ABC37, float):\n",
    "        ABC37 = int(ABC37)\n",
    "        L37 = \"Lipid LDL/HDL\"\n",
    "        LG37 = ABC37\n",
    "        T37 = ABC37\n",
    "        T37 = str(T37)\n",
    "        Alpha37 = 5\n",
    "    else:\n",
    "        T37 = \"Reading not correct\"\n",
    "        L37 = \"Lipid LDL/HDL\"\n",
    "        Alpha37 = 0\n",
    "        LG37 = T37\n",
    "    \n",
    "    # For ABC38\n",
    "    if ABC38 is None:\n",
    "        Alpha38 = 4\n",
    "        T38 = 'Reading not taken'\n",
    "        L38 = \"Lipid non-HDL\"\n",
    "        LG38 = \"N/A\"\n",
    "        ABC38 = \"\"\n",
    "    elif isinstance(ABC38, float):\n",
    "        ABC38 = int(ABC38)\n",
    "        L38 = \"Lipid non-HDL\"\n",
    "        LG38 = ABC38\n",
    "        T38 = ABC38\n",
    "        T38 = str(T38)\n",
    "        Alpha38 = 5\n",
    "    else:\n",
    "        T38 = \"Reading not correct\"\n",
    "        L38 = \"Lipid non-HDL\"\n",
    "        Alpha38 = 0\n",
    "        LG38 = T38\n",
    "    \n",
    "    # For ABC39\n",
    "    if ABC39 is None:\n",
    "        Alpha39 = 4\n",
    "        T39 = 'Reading not taken'\n",
    "        L39 = \"aortic\"\n",
    "        LG39 = \"N/A\"\n",
    "        ABC39 = \"\"\n",
    "    elif isinstance(ABC39, float):\n",
    "        ABC39 = int(ABC39)\n",
    "        L39 = \"aortic\"\n",
    "        LG39 = ABC39\n",
    "        T39 = ABC39\n",
    "        T39 = str(T39)\n",
    "        Alpha39 = 5\n",
    "    else:\n",
    "        T39 = \"Reading not correct\"\n",
    "        L39 = \"aortic\"\n",
    "        Alpha39 = 0\n",
    "        LG39 = T39\n",
    "    \n",
    "    # For ABC40\n",
    "    if ABC40 is None:\n",
    "        Alpha40 = 4\n",
    "        T40 = 'Reading not taken'\n",
    "        L40 = \"pulmonic\"\n",
    "        LG40 = \"N/A\"\n",
    "        ABC40 = \"\"\n",
    "    elif isinstance(ABC40, float):\n",
    "        ABC40 = int(ABC40)\n",
    "        L40 = \"pulmonic\"\n",
    "        LG40 = ABC40\n",
    "        T40 = ABC40\n",
    "        T40 = str(T40)\n",
    "        Alpha40 = 5\n",
    "    else:\n",
    "        T40 = \"Reading not correct\"\n",
    "        L40 = \"pulmonic\"\n",
    "        Alpha40 = 0\n",
    "        LG40 = T40\n",
    "    \n",
    "    # For ABC41\n",
    "    if ABC41 is None:\n",
    "        Alpha41 = 4\n",
    "        T41 = 'Reading not taken'\n",
    "        L41 = \"tricuspid\"\n",
    "        LG41 = \"N/A\"\n",
    "        ABC41 = \"\"\n",
    "    elif isinstance(ABC41, float):\n",
    "        ABC41 = int(ABC41)\n",
    "        L41 = \"tricuspid\"\n",
    "        LG41 = ABC41\n",
    "        T41 = ABC41\n",
    "        T41 = str(T41)\n",
    "        Alpha41 = 5\n",
    "    else:\n",
    "        T41 = \"Reading not correct\"\n",
    "        L41 = \"tricuspid\"\n",
    "        Alpha41 = 0\n",
    "        LG41 = T41\n",
    "    \n",
    "    # For ABC42\n",
    "    if ABC42 is None:\n",
    "        Alpha42 = 4\n",
    "        T42 = 'Reading not taken'\n",
    "        L42 = \"mitral\"\n",
    "        LG42 = \"N/A\"\n",
    "        ABC42 = \"\"\n",
    "    elif isinstance(ABC42, float):\n",
    "        ABC42 = int(ABC42)\n",
    "        L42 = \"mitral\"\n",
    "        LG42 = ABC42\n",
    "        T42 = ABC42\n",
    "        T42 = str(T42)\n",
    "        Alpha42 = 5\n",
    "    else:\n",
    "        T42 = \"Reading not correct\"\n",
    "        L42 = \"mitral\"\n",
    "        Alpha42 = 0\n",
    "        LG42 = T42\n",
    "    \n",
    "    # For ABC43\n",
    "    if ABC43 is None:\n",
    "        Alpha43 = 4\n",
    "        T43 = 'Reading not taken'\n",
    "        L43 = \"pos0\"\n",
    "        LG43 = \"N/A\"\n",
    "        ABC43 = \"\"\n",
    "    elif isinstance(ABC43, float):\n",
    "        ABC43 = int(ABC43)\n",
    "        L43 = \"pos0\"\n",
    "        LG43 = ABC43\n",
    "        T43 = ABC43\n",
    "        T43 = str(T43)\n",
    "        Alpha43 = 5\n",
    "    else:\n",
    "        T43 = \"Reading not correct\"\n",
    "        L43 = \"pos0\"\n",
    "        Alpha43 = 0\n",
    "        LG43 = T43\n",
    "    \n",
    "    # For ABC44\n",
    "    if ABC44 is None:\n",
    "        Alpha44 = 4\n",
    "        T44 = 'Reading not taken'\n",
    "        L44 = \"pos1\"\n",
    "        LG44 = \"N/A\"\n",
    "        ABC44 = \"\"\n",
    "    elif isinstance(ABC44, float):\n",
    "        ABC44 = int(ABC44)\n",
    "        L44 = \"pos1\"\n",
    "        LG44 = ABC44\n",
    "        T44 = ABC44\n",
    "        T44 = str(T44)\n",
    "        Alpha44 = 5\n",
    "    else:\n",
    "        T44 = \"Reading not correct\"\n",
    "        L44 = \"pos1\"\n",
    "        Alpha44 = 0\n",
    "        LG44 = T44\n",
    "    \n",
    "    # For ABC45\n",
    "    if ABC45 is None:\n",
    "        Alpha45 = 4\n",
    "        T45 = 'Reading not taken'\n",
    "        L45 = \"pos2\"\n",
    "        LG45 = \"N/A\"\n",
    "        ABC45 = \"\"\n",
    "    elif isinstance(ABC45, float):\n",
    "        ABC45 = int(ABC45)\n",
    "        L45 = \"pos2\"\n",
    "        LG45 = ABC45\n",
    "        T45 = ABC45\n",
    "        T45 = str(T45)\n",
    "        Alpha45 = 5\n",
    "    else:\n",
    "        T45 = \"Reading not correct\"\n",
    "        L45 = \"pos2\"\n",
    "        Alpha45 = 0\n",
    "        LG45 = T45\n",
    "    \n",
    "    # For ABC46\n",
    "    if ABC46 is None:\n",
    "        Alpha46 = 4\n",
    "        T46 = 'Reading not taken'\n",
    "        L46 = \"pos3\"\n",
    "        LG46 = \"N/A\"\n",
    "        ABC46 = \"\"\n",
    "    elif isinstance(ABC46, float):\n",
    "        ABC46 = int(ABC46)\n",
    "        L46 = \"pos3\"\n",
    "        LG46 = ABC46\n",
    "        T46 = ABC46\n",
    "        T46 = str(T46)\n",
    "        Alpha46 = 5\n",
    "    else:\n",
    "        T46 = \"Reading not correct\"\n",
    "        L46 = \"pos3\"\n",
    "        Alpha46 = 0\n",
    "        LG46 = T46\n",
    "    \n",
    "    # For ABC47\n",
    "    if ABC47 is None:\n",
    "        Alpha47 = 4\n",
    "        T47 = 'Reading not taken'\n",
    "        L47 = \"pos4\"\n",
    "        LG47 = \"N/A\"\n",
    "        ABC47 = \"\"\n",
    "    elif isinstance(ABC47, float):\n",
    "        ABC47 = int(ABC47)\n",
    "        L47 = \"pos4\"\n",
    "        LG47 = ABC47\n",
    "        T47 = ABC47\n",
    "        T47 = str(T47)\n",
    "        Alpha47 = 5\n",
    "    else:\n",
    "        T47 = \"Reading not correct\"\n",
    "        L47 = \"pos4\"\n",
    "        Alpha47 = 0\n",
    "        LG47 = T47\n",
    "    \n",
    "    # For ABC48\n",
    "    if ABC48 is None:\n",
    "        Alpha48 = 4\n",
    "        T48 = 'Reading not taken'\n",
    "        L48 = \"pos5\"\n",
    "        LG48 = \"N/A\"\n",
    "        ABC48 = \"\"\n",
    "    elif isinstance(ABC48, float):\n",
    "        ABC48 = int(ABC48)\n",
    "        L48 = \"pos5\"\n",
    "        LG48 = ABC48\n",
    "        T48 = ABC48\n",
    "        T48 = str(T48)\n",
    "        Alpha48 = 5\n",
    "    else:\n",
    "        T48 = \"Reading not correct\"\n",
    "        L48 = \"pos5\"\n",
    "        Alpha48 = 0\n",
    "        LG48 = T48\n",
    "    \n",
    "    # For ABC49\n",
    "    if ABC49 is None:\n",
    "        Alpha49 = 4\n",
    "        T49 = 'Reading not taken'\n",
    "        L49 = \"pos6\"\n",
    "        LG49 = \"N/A\"\n",
    "        ABC49 = \"\"\n",
    "    elif isinstance(ABC49, float):\n",
    "        ABC49 = int(ABC49)\n",
    "        L49 = \"pos6\"\n",
    "        LG49 = ABC49\n",
    "        T49 = ABC49\n",
    "        T49 = str(T49)\n",
    "        Alpha49 = 5\n",
    "    else:\n",
    "        T49 = \"Reading not correct\"\n",
    "        L49 = \"pos6\"\n",
    "        Alpha49 = 0\n",
    "        LG49 = T49\n",
    "    \n",
    "    # For ABC50\n",
    "    if ABC50 is None:\n",
    "        Alpha50 = 4\n",
    "        T50 = 'Reading not taken'\n",
    "        L50 = \"pos7\"\n",
    "        LG50 = \"N/A\"\n",
    "        ABC50 = \"\"\n",
    "    elif isinstance(ABC50, float):\n",
    "        ABC50 = int(ABC50)\n",
    "        L50 = \"pos7\"\n",
    "        LG50 = ABC50\n",
    "        T50 = ABC50\n",
    "        T50 = str(T50)\n",
    "        Alpha50 = 5\n",
    "    else:\n",
    "        T50 = \"Reading not correct\"\n",
    "        L50 = \"pos7\"\n",
    "        Alpha50 = 0\n",
    "        LG50 = T50\n",
    "    \n",
    "    # For ABC51\n",
    "    if ABC51 is None:\n",
    "        Alpha51 = 4\n",
    "        T51 = 'Reading not taken'\n",
    "        L51 = \"pos8\"\n",
    "        LG51 = \"N/A\"\n",
    "        ABC51 = \"\"\n",
    "    elif isinstance(ABC51, float):\n",
    "        ABC51 = int(ABC51)\n",
    "        L51 = \"pos8\"\n",
    "        LG51 = ABC51\n",
    "        T51 = ABC51\n",
    "        T51 = str(T51)\n",
    "        Alpha51 = 5\n",
    "    else:\n",
    "        T51 = \"Reading not correct\"\n",
    "        L51 = \"pos8\"\n",
    "        Alpha51 = 0\n",
    "        LG51 = T51\n",
    "    \n",
    "    # For ABC52\n",
    "    if ABC52 is None:\n",
    "        Alpha52 = 4\n",
    "        T52 = 'Reading not taken'\n",
    "        L52 = \"pos9\"\n",
    "        LG52 = \"N/A\"\n",
    "        ABC52 = \"\"\n",
    "    elif isinstance(ABC52, float):\n",
    "        ABC52 = int(ABC52)\n",
    "        L52 = \"pos9\"\n",
    "        LG52 = ABC52\n",
    "        T52 = ABC52\n",
    "        T52 = str(T52)\n",
    "        Alpha52 = 5\n",
    "    else:\n",
    "        T52 = \"Reading not correct\"\n",
    "        L52 = \"pos9\"\n",
    "        Alpha52 = 0\n",
    "        LG52 = T52\n",
    "    \n",
    "    # For ABC53\n",
    "    if ABC53 is None:\n",
    "        Alpha53 = 4\n",
    "        T53 = 'Reading not taken'\n",
    "        L53 = \"pos10\"\n",
    "        LG53 = \"N/A\"\n",
    "        ABC53 = \"\"\n",
    "    elif isinstance(ABC53, float):\n",
    "        ABC53 = int(ABC53)\n",
    "        L53 = \"pos10\"\n",
    "        LG53 = ABC53\n",
    "        T53 = ABC53\n",
    "        T53 = str(T53)\n",
    "        Alpha53 = 5\n",
    "    else:\n",
    "        T53 = \"Reading not correct\"\n",
    "        L53 = \"pos10\"\n",
    "        Alpha53 = 0\n",
    "        LG53 = T53\n",
    "    \n",
    "    # For ABC54\n",
    "    if ABC54 is None:\n",
    "        Alpha54 = 4\n",
    "        T54 = 'Reading not taken'\n",
    "        L54 = \"pos11\"\n",
    "        LG54 = \"N/A\"\n",
    "        ABC54 = \"\"\n",
    "    elif isinstance(ABC54, float):\n",
    "        ABC54 = int(ABC54)\n",
    "        L54 = \"pos11\"\n",
    "        LG54 = ABC54\n",
    "        T54 = ABC54\n",
    "        T54 = str(T54)\n",
    "        Alpha54 = 5\n",
    "    else:\n",
    "        T54 = \"Reading not correct\"\n",
    "        L54 = \"pos11\"\n",
    "        Alpha54 = 0\n",
    "        LG54 = T54\n",
    "    \n",
    "    # For ABC55\n",
    "    if ABC55 is None:\n",
    "        Alpha55 = 4\n",
    "        T55 = 'Reading not taken'\n",
    "        L55 = \"pos12\"\n",
    "        LG55 = \"N/A\"\n",
    "        ABC55 = \"\"\n",
    "    elif isinstance(ABC55, float):\n",
    "        ABC55 = int(ABC55)\n",
    "        L55 = \"pos12\"\n",
    "        LG55 = ABC55\n",
    "        T55 = ABC55\n",
    "        T55 = str(T55)\n",
    "        Alpha55 = 5\n",
    "    else:\n",
    "        T55 = \"Reading not correct\"\n",
    "        L55 = \"pos12\"\n",
    "        Alpha55 = 0\n",
    "        LG55 = T55\n",
    "    \n",
    "    # For ABC56\n",
    "    if ABC56 is None:\n",
    "        Alpha56 = 4\n",
    "        T56 = 'Reading not taken'\n",
    "        L56 = \"pos13\"\n",
    "        LG56 = \"N/A\"\n",
    "        ABC56 = \"\"\n",
    "    elif isinstance(ABC56, float):\n",
    "        ABC56 = int(ABC56)\n",
    "        L56 = \"pos13\"\n",
    "        LG56 = ABC56\n",
    "        T56 = ABC56\n",
    "        T56 = str(T56)\n",
    "        Alpha56 = 5\n",
    "    else:\n",
    "        T56 = \"Reading not correct\"\n",
    "        L56 = \"pos13\"\n",
    "        Alpha56 = 0\n",
    "        LG56 = T56\n",
    "    \n",
    "    # For ABC57\n",
    "    if ABC57 is None:\n",
    "        Alpha57 = 4\n",
    "        T57 = 'Reading not taken'\n",
    "        L57 = \"pos14\"\n",
    "        LG57 = \"N/A\"\n",
    "        ABC57 = \"\"\n",
    "    elif isinstance(ABC57, float):\n",
    "        ABC57 = int(ABC57)\n",
    "        L57 = \"pos14\"\n",
    "        LG57 = ABC57\n",
    "        T57 = ABC57\n",
    "        T57 = str(T57)\n",
    "        Alpha57 = 5\n",
    "    else:\n",
    "        T57 = \"Reading not correct\"\n",
    "        L57 = \"pos14\"\n",
    "        Alpha57 = 0\n",
    "        LG57 = T57\n",
    "    \n",
    "    # For ABC58\n",
    "    if ABC58 is None:\n",
    "        Alpha58 = 4\n",
    "        T58 = 'Reading not taken'\n",
    "        L58 = \"pos15\"\n",
    "        LG58 = \"N/A\"\n",
    "        ABC58 = \"\"\n",
    "    elif isinstance(ABC58, float):\n",
    "        ABC58 = int(ABC58)\n",
    "        L58 = \"pos15\"\n",
    "        LG58 = ABC58\n",
    "        T58 = ABC58\n",
    "        T58 = str(T58)\n",
    "        Alpha58 = 5\n",
    "    else:\n",
    "        T58 = \"Reading not correct\"\n",
    "        L58 = \"pos15\"\n",
    "        Alpha58 = 0\n",
    "        LG58 = T58\n",
    "    \n",
    "    # For ABC59\n",
    "    if ABC59 is None:\n",
    "        Alpha59 = 4\n",
    "        T59 = 'Reading not taken'\n",
    "        L59 = \"pos16\"\n",
    "        LG59 = \"N/A\"\n",
    "        ABC59 = \"\"\n",
    "    elif isinstance(ABC59, float):\n",
    "        ABC59 = int(ABC59)\n",
    "        L59 = \"pos16\"\n",
    "        LG59 = ABC59\n",
    "        T59 = ABC59\n",
    "        T59 = str(T59)\n",
    "        Alpha59 = 5\n",
    "    else:\n",
    "        T59 = \"Reading not correct\"\n",
    "        L59 = \"pos16\"\n",
    "        Alpha59 = 0\n",
    "        LG59 = T59\n",
    "    \n",
    "    # For ABC60\n",
    "    if ABC60 is None:\n",
    "        Alpha60 = 4\n",
    "        T60 = 'Reading not taken'\n",
    "        L60 = \"pos17\"\n",
    "        LG60 = \"N/A\"\n",
    "        ABC60 = \"\"\n",
    "    elif isinstance(ABC60, float):\n",
    "        ABC60 = int(ABC60)\n",
    "        L60 = \"pos17\"\n",
    "        LG60 = ABC60\n",
    "        T60 = ABC60\n",
    "        T60 = str(T60)\n",
    "        Alpha60 = 5\n",
    "    else:\n",
    "        T60 = \"Reading not correct\"\n",
    "        L60 = \"pos17\"\n",
    "        Alpha60 = 0\n",
    "        LG60 = T60\n",
    "    \n",
    "    # For ABC61\n",
    "    if ABC61 is None:\n",
    "        Alpha61 = 4\n",
    "        T61 = 'Reading not taken'\n",
    "        L61 = \"pos18\"\n",
    "        LG61 = \"N/A\"\n",
    "        ABC61 = \"\"\n",
    "    elif isinstance(ABC61, float):\n",
    "        ABC61 = int(ABC61)\n",
    "        L61 = \"pos18\"\n",
    "        LG61 = ABC61\n",
    "        T61 = ABC61\n",
    "        T61 = str(T61)\n",
    "        Alpha61 = 5\n",
    "    else:\n",
    "        T61 = \"Reading not correct\"\n",
    "        L61 = \"pos18\"\n",
    "        Alpha61 = 0\n",
    "        LG61 = T61\n",
    "    \n",
    "    # For ABC62\n",
    "    if ABC62 is None:\n",
    "        Alpha62 = 4\n",
    "        T62 = 'Reading not taken'\n",
    "        L62 = \"pos19\"\n",
    "        LG62 = \"N/A\"\n",
    "        ABC62 = \"\"\n",
    "    elif isinstance(ABC62, float):\n",
    "        ABC62 = int(ABC62)\n",
    "        L62 = \"pos19\"\n",
    "        LG62 = ABC62\n",
    "        T62 = ABC62\n",
    "        T62 = str(T62)\n",
    "        Alpha62 = 5\n",
    "    else:\n",
    "        T62 = \"Reading not correct\"\n",
    "        L62 = \"pos19\"\n",
    "        Alpha62 = 0\n",
    "        LG62 = T62\n",
    "    \n",
    "    # For ABC63\n",
    "    if ABC63 is None:\n",
    "        Alpha63 = 4\n",
    "        T63 = 'Reading not taken'\n",
    "        L63 = \"pos20\"\n",
    "        LG63 = \"N/A\"\n",
    "        ABC63 = \"\"\n",
    "    elif isinstance(ABC63, float):\n",
    "        ABC63 = int(ABC63)\n",
    "        L63 = \"pos20\"\n",
    "        LG63 = ABC63\n",
    "        T63 = ABC63\n",
    "        T63 = str(T63)\n",
    "        Alpha63 = 5\n",
    "    else:\n",
    "        T63 = \"Reading not correct\"\n",
    "        L63 = \"pos20\"\n",
    "        Alpha63 = 0\n",
    "        LG63 = T63\n",
    "    \n",
    "    # For ABC64\n",
    "    if ABC64 is None:\n",
    "        Alpha64 = 4\n",
    "        T64 = \"Reading not taken\"\n",
    "        L64 = \"Fat Free Weight\"\n",
    "        LG64 = \"N/A\"\n",
    "        ABC64 = \"\"\n",
    "    elif isinstance(ABC64, float):\n",
    "        ABC64 = int(ABC64)\n",
    "        L64 = \"Fat Free Weight\"\n",
    "        LG64 = ABC64\n",
    "        T64 = ABC64\n",
    "        T64 = str(T64)\n",
    "        Alpha64 = 5\n",
    "    else:\n",
    "        T64 = \"Reading not correct\"\n",
    "        L64 = \"Fat Free Weight\"\n",
    "        Alpha64 = 0\n",
    "        LG64 = T64\n",
    "    \n",
    "    # For ABC65\n",
    "    if ABC65 is None:\n",
    "        Alpha65 = 4\n",
    "        T65 = 'Reading not taken'\n",
    "        L65 = \"LMP\"\n",
    "        LG65 = \"N/A\"\n",
    "        ABC65 = \"\"\n",
    "    elif isinstance(ABC65, float):\n",
    "        ABC65 = int(ABC65)\n",
    "        L65 = \"LMP\"\n",
    "        LG65 = ABC65\n",
    "        T65 = ABC65\n",
    "        T65 = str(T65)\n",
    "        Alpha65 = 5\n",
    "    else:\n",
    "        T65 = \"Reading not correct\"\n",
    "        L65 = \"LMP\"\n",
    "        Alpha65 = 0\n",
    "        LG65 = T65\n",
    "    \n",
    "    # For ABC66\n",
    "    if ABC66 is None:\n",
    "        Alpha66 = 4\n",
    "        T66 = 'Reading not taken'\n",
    "        L66 = \"ECG\"\n",
    "        LG66 = \"N/A\"\n",
    "        ABC66 = \"\"\n",
    "    elif isinstance(ABC66, float):\n",
    "        ABC66 = int(ABC66)\n",
    "        L66 = \"ECG\"\n",
    "        LG66 = ABC66\n",
    "        T66 = ABC66\n",
    "        T66 = str(T66)\n",
    "        Alpha66 = 5\n",
    "    else:\n",
    "        T66 = \"Reading not correct\"\n",
    "        L66 = \"ECG\"\n",
    "        Alpha66 = 0\n",
    "        LG66 = T66\n",
    "    \n",
    "    # For ABC67\n",
    "    if ABC67 is None:\n",
    "        Alpha67 = 4\n",
    "        T67 = 'Reading not taken'\n",
    "        L67 = \"Oral Camera\"\n",
    "        LG67 = \"N/A\"\n",
    "        ABC67 = \"\"\n",
    "    elif isinstance(ABC67, float):\n",
    "        ABC67 = int(ABC67)\n",
    "        L67 = \"Oral Camera\"\n",
    "        LG67 = ABC67\n",
    "        T67 = ABC67\n",
    "        T67 = str(T67)\n",
    "        Alpha67 = 5\n",
    "    else:\n",
    "        T67 = \"Reading not correct\"\n",
    "        L67 = \"Oral Camera\"\n",
    "        Alpha67 = 0\n",
    "        LG67 = T67\n",
    "    \n",
    "    # For ABC68\n",
    "    if ABC68 is None:\n",
    "        Alpha68 = 4\n",
    "        T68 = 'Reading not taken'\n",
    "        L68 = \"Ear Camera\"\n",
    "        LG68 = \"N/A\"\n",
    "        ABC68 = \"\"\n",
    "    elif isinstance(ABC68, float):\n",
    "        ABC68 = int(ABC68)\n",
    "        L68 = \"Ear Camera\"\n",
    "        LG68 = ABC68\n",
    "        T68 = ABC68\n",
    "        T68 = str(T68)\n",
    "        Alpha68 = 5\n",
    "    else:\n",
    "        T68 = \"Reading not correct\"\n",
    "        L68 = \"Ear Camera\"\n",
    "        Alpha68 = 0\n",
    "        LG68 = T68\n",
    "    \n",
    "    # For ABC69\n",
    "    if ABC69 is None:\n",
    "        Alpha69 = 4\n",
    "        T69 = 'Reading not taken'\n",
    "        L69 = \"Skin Camera\"\n",
    "        LG69 = \"N/A\"\n",
    "        ABC69 = \"\"\n",
    "    elif isinstance(ABC69, float):\n",
    "        ABC69 = int(ABC69)\n",
    "        L69 = \"Skin Camera\"\n",
    "        LG69 = ABC69\n",
    "        T69 = ABC69\n",
    "        T69 = str(T69)\n",
    "        Alpha69 = 5\n",
    "    else:\n",
    "        T69 = \"Reading not correct\"\n",
    "        L69 = \"Skin Camera\"\n",
    "        Alpha69 = 0\n",
    "        LG69 = T69\n",
    "    \n",
    "    # For ABC70\n",
    "    if ABC70 is None:\n",
    "        Alpha70 = 4\n",
    "        T70 = 'Reading not taken'\n",
    "        L70 = \"Urine Test\"\n",
    "        LG70 = \"N/A\"\n",
    "        ABC70 = \"\"\n",
    "    elif isinstance(ABC70, float):\n",
    "        ABC70 = int(ABC70)\n",
    "        L70 = \"Urine Test\"\n",
    "        LG70 = ABC70\n",
    "        T70 = ABC70\n",
    "        T70 = str(T70)\n",
    "        Alpha70 = 5\n",
    "    else:\n",
    "        T70 = \"Reading not correct\"\n",
    "        L70 = \"Urine Test\"\n",
    "        Alpha70 = 0\n",
    "        LG70 = T70\n",
    "        \n",
    "       \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    S1 = 0\n",
    "    S2 = 0\n",
    "    S3 = 0\n",
    "    S4 = 0\n",
    "    S5 = 0\n",
    "    S6 = 0\n",
    "    S7 = 0\n",
    "    S8 = 0\n",
    "    S9 = 0\n",
    "    S10 = 0\n",
    "    S11 = 0\n",
    "    S12 = 0\n",
    "    S13 = 0\n",
    "    S14 = 0\n",
    "    S15 = 0\n",
    "    S16 = 0\n",
    "    S17 = 0\n",
    "    S18 = 0\n",
    "    S19 = 0\n",
    "    S20 = 0\n",
    "    S21 = 0\n",
    "    S22 = 0\n",
    "    S23 = 0\n",
    "    S24 = 0\n",
    "    S25 = 0\n",
    "    S26 = 0\n",
    "    S27 = 0\n",
    "    S28 = 0\n",
    "    S29 = 0\n",
    "    S30 = 0\n",
    "    S31 = 0\n",
    "    S32 = 0\n",
    "    S33 = 0\n",
    "    S34 = 0\n",
    "    S35 = 0\n",
    "    S36 = 0\n",
    "    S37 = 0\n",
    "    S38 = 0\n",
    "    S39 = 0\n",
    "    S40 = 0\n",
    "    S41 = 0\n",
    "    S42 = 0\n",
    "    S43 = 0\n",
    "    S44 = 0\n",
    "    S45 = 0\n",
    "    S46 = 0\n",
    "    S47 = 0\n",
    "    S48 = 0\n",
    "    S49 = 0\n",
    "    S50 = 0\n",
    "    S51 = 0\n",
    "    S52 = 0\n",
    "    S53 = 0\n",
    "    S54 = 0\n",
    "    S55 = 0\n",
    "    S56 = 0\n",
    "    S57 = 0\n",
    "    S58 = 0\n",
    "    S59 = 0\n",
    "    S60 = 0\n",
    "    S61 = 0\n",
    "    S62 = 0\n",
    "    S63 = 0\n",
    "    S64 = 0\n",
    "    S65 = 0\n",
    "    S66 = 0\n",
    "    S67 = 0\n",
    "    S68 = 0\n",
    "    S69 = 0\n",
    "    S70 = 0\n",
    "\n",
    "\n",
    "\n",
    "# Add further blocks here for the remaining parameters if needed\n",
    "\n",
    "\n",
    "    \n",
    "    \n",
    "    #Reading for different \n",
    "\n",
    "    # ADD if statement to check if ABC1 is a numberic value or None in case the reading is not done\n",
    "    # put a function right before B1 = ABC1.\n",
    "    \n",
    "    # for boy 5 to 6 year age\n",
    "    if AB1 == \"boy\":\n",
    "        if 5 <= A11 <= 6:\n",
    "            if Alpha1 == 5:\n",
    "                print(\"Boy has fallowing conditions: Age:  \",(A11) )\n",
    "                B1 = ABC1\n",
    "                PAT1 = \"18.7\"\n",
    "                PAT2 = \"22.9\"\n",
    "                if B1 > 22.9:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1  \n",
    "                if 18.7 <= B2 <= 22.9:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1  \n",
    "                if B3 < 18.7:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "        #\n",
    "               \n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                PAT3 = \"110\"\n",
    "                PAT4 = \"147\"\n",
    "                if B4 > 147:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2  \n",
    "                if 110 <= B5 <= 147:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2  \n",
    "                if B6 < 110:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "        #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                PAT5 = \"18.5\"\n",
    "                PAT6 = \"24.9\"\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3  \n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3  \n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "        #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                PAT7 = \"12.2\"\n",
    "                PAT8 = \"15.5\"\n",
    "                if B10 > 15.5:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4  \n",
    "                if 12.2 <= B11 <= 15.5:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4  \n",
    "                if B12 < 12.2:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "        #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                PAT63 = \"9.5\"\n",
    "                PAT64 = \"14\"\n",
    "                if B13 > 14:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32  \n",
    "                if 9.5 <= B14 <= 14:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32  \n",
    "                if B15 < 9.5:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "        #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                PAT61 = \"90\"\n",
    "                PAT62 = \"180\"\n",
    "                if B16 > 180:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31  \n",
    "                if 90 <= B17 <= 180:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31  \n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "\n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S31 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S31 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S31 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S32 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S32 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S32 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "          \n",
    "    \n",
    "            \n",
    "            \n",
    "    \n",
    "    \n",
    "            print(\"5-6\")\n",
    "\n",
    "    if AB1 == \"boy\":\n",
    "        if 7 <= A11 <= 11:\n",
    "            print(\"Boy has following conditions: Age: \", A11)\n",
    "            if Alpha1 == 5:\n",
    "                B1 = ABC1\n",
    "                PAT1 = \"22.9\"\n",
    "                PAT2 = \"37\"\n",
    "                if B1 > 37:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1\n",
    "                if 22.9 <= B2 <= 37:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1\n",
    "                if B3 < 22.9:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "            #\n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                PAT3 = \"121.7\"\n",
    "                PAT4 = \"147\"\n",
    "                if B4 > 147:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2\n",
    "                if 121.7 <= B5 <= 147:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2\n",
    "                if B6 < 121.7:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "            #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                PAT5 = \"18.5\"\n",
    "                PAT6 = \"24.9\"\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3\n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3\n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "            #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                PAT7 = \"15.5\"\n",
    "                PAT8 = \"19.9\"\n",
    "                if B10 > 19.9:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4\n",
    "                if 15.5 <= B11 <= 19.9:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4\n",
    "                if B12 < 15.5:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "            #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                PAT63 = \"10\"\n",
    "                PAT64 = \"15.5\"\n",
    "                if B13 > 15.5:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32\n",
    "                if 10 <= B14 <= 15.5:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32\n",
    "                if B15 < 10:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "            #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                PAT61 = \"90\"\n",
    "                PAT62 = \"180\"\n",
    "                if B16 > 180:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31\n",
    "                if 90 <= B17 <= 180:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31\n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "    \n",
    "        \n",
    "\n",
    "\n",
    "\n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S31 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S31 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S31 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S32 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S32 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S32 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "            \n",
    "            \n",
    "\n",
    "            \n",
    "            \n",
    "            print(\"7-12\")\n",
    "\n",
    "    if AB1 == \"boy\":\n",
    "        if 12 <= A11 <= 18:\n",
    "            print(\"Boy has following conditions: Age: \", A11)\n",
    "            if Alpha1 == 5:\n",
    "                PAT1 = \"37\"\n",
    "                PAT2 = \"65\"\n",
    "                B1 = ABC1\n",
    "                if B1 > 65:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1\n",
    "                if 37 <= B2 <= 65:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1\n",
    "                if B3 < 37:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "            #\n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                PAT3 = \"147\"\n",
    "                PAT4 = \"177\"\n",
    "                if B4 > 177:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2\n",
    "                if 147 <= B5 <= 177:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2\n",
    "                if B6 < 147:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "            #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                PAT5 = \"18.5\"\n",
    "                PAT6 = \"24.9\"\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3\n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3\n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "            #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                PAT7 = \"16.9\"\n",
    "                PAT8 = \"19.9\"\n",
    "                if B10 > 19.9:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4\n",
    "                if 16.9 <= B11 <= 19.9:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4\n",
    "                if B12 < 16.9:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "            #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                PAT9 = \"10\"\n",
    "                PAT10 = \"15.5\"\n",
    "                if B13 > 15.5:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32\n",
    "                if 10 <= B14 <= 15.5:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32\n",
    "                if B15 < 10:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "            #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                PAT11 = \"90\"\n",
    "                PAT12 = \"130\"\n",
    "                if B16 > 130:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31\n",
    "                if 90 <= B17 <= 130:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31\n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "\n",
    "\n",
    "\n",
    "            \n",
    "   \n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S31 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S31 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S31 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S32 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S32 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S32 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "            print(\"12-18\")\n",
    "\n",
    "    if AB1 == \"girl\":\n",
    "        if 5 <= A11 <= 6:\n",
    "            print(\"Girl has following conditions: Age: \", A11)\n",
    "            if Alpha1 == 5:\n",
    "                B1 = ABC1\n",
    "                PAT1 = \"17.7\"\n",
    "                PAT2 = \"21.8\"\n",
    "                if B1 > 21.8:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1\n",
    "                if 17.7 <= B2 <= 21.8:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1\n",
    "                if B3 < 17.7:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "            #\n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                PAT3 = \"108.4\"\n",
    "                PAT4 = \"148\"\n",
    "                if B4 > 148:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2\n",
    "                if 108.4 <= B5 <= 148:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2\n",
    "                if B6 < 108.4:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "            #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                PAT5 = \"18.5\"\n",
    "                PAT6 = \"24.9\"\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3\n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3\n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "            #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                PAT7 = \"15.4\"\n",
    "                PAT8 = \"17.2\"\n",
    "                if B10 > 17.2:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4\n",
    "                if 15.4 <= B11 <= 17.2:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4\n",
    "                if B12 < 15.4:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "            #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                PAT9 = \"9.5\"\n",
    "                PAT10 = \"14\"\n",
    "                if B13 > 14:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32\n",
    "                if 9.5 <= B14 <= 14:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32\n",
    "                if B15 < 9.5:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "            #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                PAT11 = \"90\"\n",
    "                PAT12 = \"180\"\n",
    "                if B16 > 180:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31\n",
    "                if 90 <= B17 <= 180:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31\n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "    \n",
    "        \n",
    "   \n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S31 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S31 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S31 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S32 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S32 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S32 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "                \n",
    "            print(\"5-6\")\n",
    "\n",
    "    if AB1 == \"girl\":\n",
    "        if 7 <= A11 <= 11:\n",
    "            print(\"Girl has following conditions: Age: \", A11)\n",
    "            if Alpha1 == 5:\n",
    "                B1 = ABC1\n",
    "                PAT1 = \"21.8\"\n",
    "                PAT2 = \"38.7\"\n",
    "                if B1 > 38.7:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1\n",
    "                if 21.8 <= B2 <= 38.7:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1\n",
    "                if B3 < 21.8:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "            #\n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                PAT3 = \"120.6\"\n",
    "                PAT4 = \"148\"\n",
    "                if B4 > 148:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2\n",
    "                if 120.6 <= B5 <= 148:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2\n",
    "                if B6 < 120.6:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "            #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                PAT5 = \"18.5\"\n",
    "                PAT6 = \"24.9\"\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3\n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3\n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "            #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                PAT7 = \"17.2\"\n",
    "                PAT8 = \"23.2\"\n",
    "                if B10 > 23.2:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4\n",
    "                if 17.2 <= B11 <= 23.2:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4\n",
    "                if B12 < 17.2:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "            #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                PAT9 = \"10\"\n",
    "                PAT10 = \"15.5\"\n",
    "                if B13 > 15.5:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32\n",
    "                if 10 <= B14 <= 15.5:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32\n",
    "                if B15 < 10:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "            #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                PAT11 = \"90\"\n",
    "                PAT12 = \"180\"\n",
    "                if B16 > 180:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31\n",
    "                if 90 <= B17 <= 180:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31\n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "    \n",
    "\n",
    "    \n",
    "    \n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S5 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S5 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S5 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S6 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S6 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S6 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "    \n",
    "            print(\"7-12\")\n",
    "\n",
    "    if AB1 == \"girl\":\n",
    "        if 12 <= A11 <= 18:\n",
    "            print(\"Girl has following conditions: Age: \", A11)\n",
    "            if Alpha1 == 5:\n",
    "                B1 = ABC1\n",
    "                if B1 > 54.5:\n",
    "                    C1 = 1\n",
    "                else:\n",
    "                    C1 = 0\n",
    "                B2 = ABC1\n",
    "                if 38.7 <= B2 <= 54.5:\n",
    "                    C2 = 1\n",
    "                else:\n",
    "                    C2 = 0\n",
    "                B3 = ABC1\n",
    "                if B3 < 38.7:\n",
    "                    C3 = 1\n",
    "                else:\n",
    "                    C3 = 0\n",
    "            #\n",
    "            if Alpha2 == 5:\n",
    "                B4 = ABC2\n",
    "                if B4 > 164:\n",
    "                    C4 = 1\n",
    "                else:\n",
    "                    C4 = 0\n",
    "                B5 = ABC2\n",
    "                if 148 <= B5 <= 164:\n",
    "                    C5 = 1\n",
    "                else:\n",
    "                    C5 = 0\n",
    "                B6 = ABC2\n",
    "                if B6 < 148:\n",
    "                    C6 = 1\n",
    "                else:\n",
    "                    C6 = 0\n",
    "            #\n",
    "            if Alpha3 == 5:\n",
    "                B7 = ABC3\n",
    "                if B7 > 24.9:\n",
    "                    C7 = 1\n",
    "                else:\n",
    "                    C7 = 0\n",
    "                B8 = ABC3\n",
    "                if 18.5 <= B8 <= 24.9:\n",
    "                    C8 = 1\n",
    "                else:\n",
    "                    C8 = 0\n",
    "                B9 = ABC3\n",
    "                if B9 < 18.5:\n",
    "                    C9 = 1\n",
    "                else:\n",
    "                    C9 = 0\n",
    "            #\n",
    "            if Alpha4 == 5:\n",
    "                B10 = ABC4\n",
    "                if B10 > 28.9:\n",
    "                    C10 = 1\n",
    "                else:\n",
    "                    C10 = 0\n",
    "                B11 = ABC4\n",
    "                if 23.2 <= B11 <= 28.9:\n",
    "                    C11 = 1\n",
    "                else:\n",
    "                    C11 = 0\n",
    "                B12 = ABC4\n",
    "                if B12 < 23.2:\n",
    "                    C12 = 1\n",
    "                else:\n",
    "                    C12 = 0\n",
    "            #\n",
    "            if Alpha32 == 5:\n",
    "                B13 = ABC32\n",
    "                if B13 > 15.5:\n",
    "                    C13 = 1\n",
    "                else:\n",
    "                    C13 = 0\n",
    "                B14 = ABC32\n",
    "                if 10 <= B14 <= 15.5:\n",
    "                    C14 = 1\n",
    "                else:\n",
    "                    C14 = 0\n",
    "                B15 = ABC32\n",
    "                if B15 < 10:\n",
    "                    C15 = 1\n",
    "                else:\n",
    "                    C15 = 0\n",
    "            #\n",
    "            if Alpha31 == 5:\n",
    "                B16 = ABC31\n",
    "                if B16 > 130:\n",
    "                    C16 = 1\n",
    "                else:\n",
    "                    C16 = 0\n",
    "                B17 = ABC31\n",
    "                if 90 <= B17 <= 130:\n",
    "                    C17 = 1\n",
    "                else:\n",
    "                    C17 = 0\n",
    "                B18 = ABC31\n",
    "                if B18 < 90:\n",
    "                    C18 = 1\n",
    "                else:\n",
    "                    C18 = 0\n",
    "\n",
    "\n",
    "    \n",
    "    \n",
    "            if C1 == 1: \n",
    "                S1 = 165\n",
    "                print(\"Above normal Weight\")\n",
    "                Q1 = \"Above normal Weight\"\n",
    "            elif C2 == 1:\n",
    "                S1 = 99\n",
    "                print(\"Normal Weight\")\n",
    "                Q1 = \"Normal Weight\"\n",
    "            elif C3 == 1:\n",
    "                S1 = 33\n",
    "                print(\"Less than normal Weight\")\n",
    "                Q1 = \"Less than normal Weight\"\n",
    "            \n",
    "            if C4 == 1:\n",
    "                S2 = 165\n",
    "                print(\"Above normal Height\")\n",
    "                Q2 = \"Above normal Height\"\n",
    "            elif C5 == 1:\n",
    "                S2 = 99\n",
    "                print(\"Normal Height\")\n",
    "                Q2 = \"Normal Height\"\n",
    "            elif C6 == 1:\n",
    "                S2 = 33\n",
    "                print(\"Less than normal Height\")\n",
    "                Q2 = \"Less than normal Height\"\n",
    "            \n",
    "            if C7 == 1:\n",
    "                S3 = 165\n",
    "                print(\"Above normal BMI\")\n",
    "                Q3 = \"Above normal BMI\"\n",
    "            elif C8 == 1:\n",
    "                S3 = 99\n",
    "                print(\"Normal BMI\")\n",
    "                Q3 = \"Normal BMI\"\n",
    "            elif C9 == 1:\n",
    "                S3 = 33\n",
    "                print(\"Less than normal BMI\")\n",
    "                Q3 = \"Less than normal BMI\"\n",
    "            \n",
    "            if C10 == 1:\n",
    "                S4 = 165\n",
    "                print(\"Above normal Fat\")\n",
    "                Q4 = \"Above normal Fat\"\n",
    "            elif C11 == 1:\n",
    "                S4 = 99\n",
    "                print(\"Normal Fat\")\n",
    "                Q4 = \"Normal Fat\"\n",
    "            elif C12 == 1:\n",
    "                S4 = 33\n",
    "                print(\"Less than normal Fat\")\n",
    "                Q4 = \"Less than normal Fat\"\n",
    "            \n",
    "            if C13 == 1:\n",
    "                S5 = 165\n",
    "                print(\"Above normal Hemoglobin\")\n",
    "                Q5 = \"Above normal Hemoglobin\"\n",
    "            elif C14 == 1:\n",
    "                S5 = 99\n",
    "                print(\"Normal Hemoglobin\")\n",
    "                Q5 = \"Normal Hemoglobin\"\n",
    "            elif C15 == 1:\n",
    "                S5 = 33\n",
    "                print(\"Less than normal Hemoglobin\")\n",
    "                Q5 = \"Less than normal Hemoglobin\"\n",
    "            \n",
    "            if C16 == 1:\n",
    "                S6 = 165\n",
    "                print(\"Above normal Glucose\")\n",
    "                Q6 = \"Above normal Glucose\"\n",
    "            elif C17 == 1:\n",
    "                S6 = 99\n",
    "                print(\"Normal Glucose\")\n",
    "                Q6 = \"Normal Glucose\"\n",
    "            elif C18 == 1:\n",
    "                S6 = 33\n",
    "                print(\"Less than Normal Glucose\")\n",
    "                Q6 = \"Less than Normal Glucose\"\n",
    "\n",
    "\n",
    "\n",
    "    print(S2)\n",
    "\n",
    "\n",
    "    if S1 == 165:\n",
    "        ParmaA1 = \"High\"\n",
    "        ALHO1 = (240,10,0)\n",
    "    elif S1 == 99:\n",
    "        ParmaA1 = \"Normal\"\n",
    "        ALHO1 = (0,255,0)\n",
    "    elif S1 == 33:\n",
    "        ParmaA1 = \"Low\"\n",
    "        ALHO1 = (240,10,0)\n",
    "\n",
    "    if S2 == 165:\n",
    "        ParmaA2 = \"High\"\n",
    "        ALHO2 = (240,10,0)\n",
    "        \n",
    "    elif S2 == 99:\n",
    "        ParmaA2 = \"Normal\"\n",
    "        ALHO2 = (0,255,0)\n",
    "        \n",
    "    elif S2 == 33:\n",
    "        ParmaA2 = \"Low\"\n",
    "        ALHO2 = (240,10,0)\n",
    "        \n",
    "\n",
    "    if S3 == 165:\n",
    "        ParmaA3 = \"High\"\n",
    "        ALHO3 = (240,10,0)\n",
    "    elif S3 == 99:\n",
    "        ParmaA3 = \"Normal\"\n",
    "        ALHO3 = (0,255,0)\n",
    "    elif S3 == 33:\n",
    "        ParmaA3 = \"Low\"\n",
    "        ALHO3 = (240,10,0)\n",
    "\n",
    "    if S4 == 165:\n",
    "        ParmaA4 = \"High\"\n",
    "        ALHO4 = (240,10,0)\n",
    "    elif S4 == 99:\n",
    "        ParmaA4 = \"Normal\"\n",
    "        ALHO4 = (0,255,0)\n",
    "    elif S4 == 33:\n",
    "        ParmaA4 = \"Low\"\n",
    "        ALHO4 = (240,10,0)\n",
    "\n",
    "    if S5 == 165:\n",
    "        ParmaA5 = \"High\"\n",
    "        ALHO1 = (240,10,0)\n",
    "    elif S5 == 99:\n",
    "        ParmaA5 = \"Normal\"\n",
    "        ALHO5 = (0,255,0)\n",
    "    elif S5 == 33:\n",
    "        ParmaA5 = \"Low\"\n",
    "        ALHO5 = (240,10,0)\n",
    "\n",
    "    if S6 == 165:\n",
    "        ParmaA6 = \"High\"\n",
    "        ALHO6 = (240,10,0)\n",
    "    elif S6 == 99:\n",
    "        ParmaA6 = \"Normal\"\n",
    "        ALHO6 = (0,255,0)\n",
    "    elif S6 == 33:\n",
    "        ParmaA6 = \"Low\"\n",
    "        ALHO6 = (240,10,0)\n",
    "    \n",
    "    if S1 == 165:\n",
    "        ParmaA1 = \"High\"\n",
    "        ALHO1 = (240, 10, 0)\n",
    "    elif S1 == 99:\n",
    "        ParmaA1 = \"Normal\"\n",
    "        ALHO1 = (0, 255, 0)\n",
    "    elif S1 == 33:\n",
    "        ParmaA1 = \"Low\"\n",
    "        ALHO1 = (240, 10, 0)\n",
    "    \n",
    "    if S2 == 165:\n",
    "        ParmaA2 = \"High\"\n",
    "        ALHO2 = (240, 10, 0)\n",
    "    elif S2 == 99:\n",
    "        ParmaA2 = \"Normal\"\n",
    "        ALHO2 = (0, 255, 0)\n",
    "    elif S2 == 33:\n",
    "        ParmaA2 = \"Low\"\n",
    "        ALHO2 = (240, 10, 0)\n",
    "    \n",
    "    if S3 == 165:\n",
    "        ParmaA3 = \"High\"\n",
    "        ALHO3 = (240, 10, 0)\n",
    "    elif S3 == 99:\n",
    "        ParmaA3 = \"Normal\"\n",
    "        ALHO3 = (0, 255, 0)\n",
    "    elif S3 == 33:\n",
    "        ParmaA3 = \"Low\"\n",
    "        ALHO3 = (240, 10, 0)\n",
    "    \n",
    "    if S4 == 165:\n",
    "        ParmaA4 = \"High\"\n",
    "        ALHO4 = (240, 10, 0)\n",
    "    elif S4 == 99:\n",
    "        ParmaA4 = \"Normal\"\n",
    "        ALHO4 = (0, 255, 0)\n",
    "    elif S4 == 33:\n",
    "        ParmaA4 = \"Low\"\n",
    "        ALHO4 = (240, 10, 0)\n",
    "    \n",
    "    if S5 == 165:\n",
    "        ParmaA5 = \"High\"\n",
    "        ALHO5 = (240, 10, 0)\n",
    "    elif S5 == 99:\n",
    "        ParmaA5 = \"Normal\"\n",
    "        ALHO5 = (0, 255, 0)\n",
    "    elif S5 == 33:\n",
    "        ParmaA5 = \"Low\"\n",
    "        ALHO5 = (240, 10, 0)\n",
    "    \n",
    "    if S6 == 165:\n",
    "        ParmaA6 = \"High\"\n",
    "        ALHO6 = (240, 10, 0)\n",
    "    elif S6 == 99:\n",
    "        ParmaA6 = \"Normal\"\n",
    "        ALHO6 = (0, 255, 0)\n",
    "    elif S6 == 33:\n",
    "        ParmaA6 = \"Low\"\n",
    "        ALHO6 = (240, 10, 0)\n",
    "    \n",
    "    if S7 == 165:\n",
    "        ParmaA7 = \"High\"\n",
    "        ALHO7 = (240, 10, 0)\n",
    "    elif S7 == 99:\n",
    "        ParmaA7 = \"Normal\"\n",
    "        ALHO7 = (0, 255, 0)\n",
    "    elif S7 == 33:\n",
    "        ParmaA7 = \"Low\"\n",
    "        ALHO7 = (240, 10, 0)\n",
    "    \n",
    "    if S8 == 165:\n",
    "        ParmaA8 = \"High\"\n",
    "        ALHO8 = (240, 10, 0)\n",
    "    elif S8 == 99:\n",
    "        ParmaA8 = \"Normal\"\n",
    "        ALHO8 = (0, 255, 0)\n",
    "    elif S8 == 33:\n",
    "        ParmaA8 = \"Low\"\n",
    "        ALHO8 = (240, 10, 0)\n",
    "    \n",
    "    if S9 == 165:\n",
    "        ParmaA9 = \"High\"\n",
    "        ALHO9 = (240, 10, 0)\n",
    "    elif S9 == 99:\n",
    "        ParmaA9 = \"Normal\"\n",
    "        ALHO9 = (0, 255, 0)\n",
    "    elif S9 == 33:\n",
    "        ParmaA9 = \"Low\"\n",
    "        ALHO9 = (240, 10, 0)\n",
    "    \n",
    "    if S10 == 165:\n",
    "        ParmaA10 = \"High\"\n",
    "        ALHO10 = (240, 10, 0)\n",
    "    elif S10 == 99:\n",
    "        ParmaA10 = \"Normal\"\n",
    "        ALHO10 = (0, 255, 0)\n",
    "    elif S10 == 33:\n",
    "        ParmaA10 = \"Low\"\n",
    "        ALHO10 = (240, 10, 0)\n",
    "    \n",
    "    if S11 == 165:\n",
    "        ParmaA11 = \"High\"\n",
    "        ALHO11 = (240, 10, 0)\n",
    "    elif S11 == 99:\n",
    "        ParmaA11 = \"Normal\"\n",
    "        ALHO11 = (0, 255, 0)\n",
    "    elif S11 == 33:\n",
    "        ParmaA11 = \"Low\"\n",
    "        ALHO11 = (240, 10, 0)\n",
    "    \n",
    "    if S12 == 165:\n",
    "        ParmaA12 = \"High\"\n",
    "        ALHO12 = (240, 10, 0)\n",
    "    elif S12 == 99:\n",
    "        ParmaA12 = \"Normal\"\n",
    "        ALHO12 = (0, 255, 0)\n",
    "    elif S12 == 33:\n",
    "        ParmaA12 = \"Low\"\n",
    "        ALHO12 = (240, 10, 0)\n",
    "    \n",
    "    if S13 == 165:\n",
    "        ParmaA13 = \"High\"\n",
    "        ALHO13 = (240, 10, 0)\n",
    "    elif S13 == 99:\n",
    "        ParmaA13 = \"Normal\"\n",
    "        ALHO13 = (0, 255, 0)\n",
    "    elif S13 == 33:\n",
    "        ParmaA13 = \"Low\"\n",
    "        ALHO13 = (240, 10, 0)\n",
    "    \n",
    "    if S14 == 165:\n",
    "        ParmaA14 = \"High\"\n",
    "        ALHO14 = (240, 10, 0)\n",
    "    elif S14 == 99:\n",
    "        ParmaA14 = \"Normal\"\n",
    "        ALHO14 = (0, 255, 0)\n",
    "    elif S14 == 33:\n",
    "        ParmaA14 = \"Low\"\n",
    "        ALHO14 = (240, 10, 0)\n",
    "    \n",
    "    if S15 == 165:\n",
    "        ParmaA15 = \"High\"\n",
    "        ALHO15 = (240, 10, 0)\n",
    "    elif S15 == 99:\n",
    "        ParmaA15 = \"Normal\"\n",
    "        ALHO15 = (0, 255, 0)\n",
    "    elif S15 == 33:\n",
    "        ParmaA15 = \"Low\"\n",
    "        ALHO15 = (240, 10, 0)\n",
    "    \n",
    "    if S16 == 165:\n",
    "        ParmaA16 = \"High\"\n",
    "        ALHO16 = (240, 10, 0)\n",
    "    elif S16 == 99:\n",
    "        ParmaA16 = \"Normal\"\n",
    "        ALHO16 = (0, 255, 0)\n",
    "    elif S16 == 33:\n",
    "        ParmaA16 = \"Low\"\n",
    "        ALHO16 = (240, 10, 0)\n",
    "    \n",
    "    if S17 == 165:\n",
    "        ParmaA17 = \"High\"\n",
    "        ALHO17 = (240, 10, 0)\n",
    "    elif S17 == 99:\n",
    "        ParmaA17 = \"Normal\"\n",
    "        ALHO17 = (0, 255, 0)\n",
    "    elif S17 == 33:\n",
    "        ParmaA17 = \"Low\"\n",
    "        ALHO17 = (240, 10, 0)\n",
    "    \n",
    "    if S18 == 165:\n",
    "        ParmaA18 = \"High\"\n",
    "        ALHO18 = (240, 10, 0)\n",
    "    elif S18 == 99:\n",
    "        ParmaA18 = \"Normal\"\n",
    "        ALHO18 = (0, 255, 0)\n",
    "    elif S18 == 33:\n",
    "        ParmaA18 = \"Low\"\n",
    "        ALHO18 = (240, 10, 0)\n",
    "    \n",
    "    if S19 == 165:\n",
    "        ParmaA19 = \"High\"\n",
    "        ALHO19 = (240, 10, 0)\n",
    "    elif S19 == 99:\n",
    "        ParmaA19 = \"Normal\"\n",
    "        ALHO19 = (0, 255, 0)\n",
    "    elif S19 == 33:\n",
    "        ParmaA19 = \"Low\"\n",
    "        ALHO19 = (240, 10, 0)\n",
    "    \n",
    "    if S20 == 165:\n",
    "        ParmaA20 = \"High\"\n",
    "        ALHO20 = (240, 10, 0)\n",
    "    elif S20 == 99:\n",
    "        ParmaA20 = \"Normal\"\n",
    "        ALHO20 = (0, 255, 0)\n",
    "    elif S20 == 33:\n",
    "        ParmaA20 = \"Low\"\n",
    "        ALHO20 = (240, 10, 0)\n",
    "    \n",
    "    if S21 == 165:\n",
    "        ParmaA21 = \"High\"\n",
    "        ALHO21 = (240, 10, 0)\n",
    "    elif S21 == 99:\n",
    "        ParmaA21 = \"Normal\"\n",
    "        ALHO21 = (0, 255, 0)\n",
    "    elif S21 == 33:\n",
    "        ParmaA21 = \"Low\"\n",
    "        ALHO21 = (240, 10, 0)\n",
    "    \n",
    "    if S22 == 165:\n",
    "        ParmaA22 = \"High\"\n",
    "        ALHO22 = (240, 10, 0)\n",
    "    elif S22 == 99:\n",
    "        ParmaA22 = \"Normal\"\n",
    "        ALHO22 = (0, 255, 0)\n",
    "    elif S22 == 33:\n",
    "        ParmaA22 = \"Low\"\n",
    "        ALHO22 = (240, 10, 0)\n",
    "    \n",
    "    if S23 == 165:\n",
    "        ParmaA23 = \"High\"\n",
    "        ALHO23 = (240, 10, 0)\n",
    "    elif S23 == 99:\n",
    "        ParmaA23 = \"Normal\"\n",
    "        ALHO23 = (0, 255, 0)\n",
    "    elif S23 == 33:\n",
    "        ParmaA23 = \"Low\"\n",
    "        ALHO23 = (240, 10, 0)\n",
    "    \n",
    "    if S24 == 165:\n",
    "        ParmaA24 = \"High\"\n",
    "        ALHO24 = (240, 10, 0)\n",
    "    elif S24 == 99:\n",
    "        ParmaA24 = \"Normal\"\n",
    "        ALHO24 = (0, 255, 0)\n",
    "    elif S24 == 33:\n",
    "        ParmaA24 = \"Low\"\n",
    "        ALHO24 = (240, 10, 0)\n",
    "    \n",
    "    if S25 == 165:\n",
    "        ParmaA25 = \"High\"\n",
    "        ALHO25 = (240, 10, 0)\n",
    "    elif S25 == 99:\n",
    "        ParmaA25 = \"Normal\"\n",
    "        ALHO25 = (0, 255, 0)\n",
    "    elif S25 == 33:\n",
    "        ParmaA25 = \"Low\"\n",
    "        ALHO25 = (240, 10, 0)\n",
    "    \n",
    "    if S26 == 165:\n",
    "        ParmaA26 = \"High\"\n",
    "        ALHO26 = (240, 10, 0)\n",
    "    elif S26 == 99:\n",
    "        ParmaA26 = \"Normal\"\n",
    "        ALHO26 = (0, 255, 0)\n",
    "    elif S26 == 33:\n",
    "        ParmaA26 = \"Low\"\n",
    "        ALHO26 = (240, 10, 0)\n",
    "    \n",
    "    if S27 == 165:\n",
    "        ParmaA27 = \"High\"\n",
    "        ALHO27 = (240, 10, 0)\n",
    "    elif S27 == 99:\n",
    "        ParmaA27 = \"Normal\"\n",
    "        ALHO27 = (0, 255, 0)\n",
    "    elif S27 == 33:\n",
    "        ParmaA27 = \"Low\"\n",
    "        ALHO27 = (240, 10, 0)\n",
    "    \n",
    "    if S28 == 165:\n",
    "        ParmaA28 = \"High\"\n",
    "        ALHO28 = (240, 10, 0)\n",
    "    elif S28 == 99:\n",
    "        ParmaA28 = \"Normal\"\n",
    "        ALHO28 = (0, 255, 0)\n",
    "    elif S28 == 33:\n",
    "        ParmaA28 = \"Low\"\n",
    "        ALHO28 = (240, 10, 0)\n",
    "    \n",
    "    if S29 == 165:\n",
    "        ParmaA29 = \"High\"\n",
    "        ALHO29 = (240, 10, 0)\n",
    "    elif S29 == 99:\n",
    "        ParmaA29 = \"Normal\"\n",
    "        ALHO29 = (0, 255, 0)\n",
    "    elif S29 == 33:\n",
    "        ParmaA29 = \"Low\"\n",
    "        ALHO29 = (240, 10, 0)\n",
    "    \n",
    "    if S30 == 165:\n",
    "        ParmaA30 = \"High\"\n",
    "        ALHO30 = (240, 10, 0)\n",
    "    elif S30 == 99:\n",
    "        ParmaA30 = \"Normal\"\n",
    "        ALHO30 = (0, 255, 0)\n",
    "    elif S30 == 33:\n",
    "        ParmaA30 = \"Low\"\n",
    "        ALHO30 = (240, 10, 0)\n",
    "    \n",
    "    if S31 == 165:\n",
    "        ParmaA31 = \"High\"\n",
    "        ALHO31 = (240, 10, 0)\n",
    "    elif S31 == 99:\n",
    "        ParmaA31 = \"Normal\"\n",
    "        ALHO31 = (0, 255, 0)\n",
    "    elif S31 == 33:\n",
    "        ParmaA31 = \"Low\"\n",
    "        ALHO31 = (240, 10, 0)\n",
    "    \n",
    "    if S32 == 165:\n",
    "        ParmaA32 = \"High\"\n",
    "        ALHO32 = (240, 10, 0)\n",
    "    elif S32 == 99:\n",
    "        ParmaA32 = \"Normal\"\n",
    "        ALHO32 = (0, 255, 0)\n",
    "    elif S32 == 33:\n",
    "        ParmaA32 = \"Low\"\n",
    "        ALHO32 = (240, 10, 0)\n",
    "    \n",
    "    if S33 == 165:\n",
    "        ParmaA33 = \"High\"\n",
    "        ALHO33 = (240, 10, 0)\n",
    "    elif S33 == 99:\n",
    "        ParmaA33 = \"Normal\"\n",
    "        ALHO33 = (0, 255, 0)\n",
    "    elif S33 == 33:\n",
    "        ParmaA33 = \"Low\"\n",
    "        ALHO33 = (240, 10, 0)\n",
    "    \n",
    "    if S34 == 165:\n",
    "        ParmaA34 = \"High\"\n",
    "        ALHO34 = (240, 10, 0)\n",
    "    elif S34 == 99:\n",
    "        ParmaA34 = \"Normal\"\n",
    "        ALHO34 = (0, 255, 0)\n",
    "    elif S34 == 33:\n",
    "        ParmaA34 = \"Low\"\n",
    "        ALHO34 = (240, 10, 0)\n",
    "    \n",
    "    if S35 == 165:\n",
    "        ParmaA35 = \"High\"\n",
    "        ALHO35 = (240, 10, 0)\n",
    "    elif S35 == 99:\n",
    "        ParmaA35 = \"Normal\"\n",
    "        ALHO35 = (0, 255, 0)\n",
    "    elif S35 == 33:\n",
    "        ParmaA35 = \"Low\"\n",
    "        ALHO35 = (240, 10, 0)\n",
    "    \n",
    "    if S36 == 165:\n",
    "        ParmaA36 = \"High\"\n",
    "        ALHO36 = (240, 10, 0)\n",
    "    elif S36 == 99:\n",
    "        ParmaA36 = \"Normal\"\n",
    "        ALHO36 = (0, 255, 0)\n",
    "    elif S36 == 33:\n",
    "        ParmaA36 = \"Low\"\n",
    "        ALHO36 = (240, 10, 0)\n",
    "    \n",
    "    if S37 == 165:\n",
    "        ParmaA37 = \"High\"\n",
    "        ALHO37 = (240, 10, 0)\n",
    "    elif S37 == 99:\n",
    "        ParmaA37 = \"Normal\"\n",
    "        ALHO37 = (0, 255, 0)\n",
    "    elif S37 == 33:\n",
    "        ParmaA37 = \"Low\"\n",
    "        ALHO37 = (240, 10, 0)\n",
    "    \n",
    "    if S38 == 165:\n",
    "        ParmaA38 = \"High\"\n",
    "        ALHO38 = (240, 10, 0)\n",
    "    elif S38 == 99:\n",
    "        ParmaA38 = \"Normal\"\n",
    "        ALHO38 = (0, 255, 0)\n",
    "    elif S38 == 33:\n",
    "        ParmaA38 = \"Low\"\n",
    "        ALHO38 = (240, 10, 0)\n",
    "    \n",
    "    if S39 == 165:\n",
    "        ParmaA39 = \"High\"\n",
    "        ALHO39 = (240, 10, 0)\n",
    "    elif S39 == 99:\n",
    "        ParmaA39 = \"Normal\"\n",
    "        ALHO39 = (0, 255, 0)\n",
    "    elif S39 == 33:\n",
    "        ParmaA39 = \"Low\"\n",
    "        ALHO39 = (240, 10, 0)\n",
    "    \n",
    "    if S40 == 165:\n",
    "        ParmaA40 = \"High\"\n",
    "        ALHO40 = (240, 10, 0)\n",
    "    elif S40 == 99:\n",
    "        ParmaA40 = \"Normal\"\n",
    "        ALHO40 = (0, 255, 0)\n",
    "    elif S40 == 33:\n",
    "        ParmaA40 = \"Low\"\n",
    "        ALHO40 = (240, 10, 0)\n",
    "    \n",
    "    if S41 == 165:\n",
    "        ParmaA41 = \"High\"\n",
    "        ALHO41 = (240, 10, 0)\n",
    "    elif S41 == 99:\n",
    "        ParmaA41 = \"Normal\"\n",
    "        ALHO41 = (0, 255, 0)\n",
    "    elif S41 == 33:\n",
    "        ParmaA41 = \"Low\"\n",
    "        ALHO41 = (240, 10, 0)\n",
    "    \n",
    "    if S42 == 165:\n",
    "        ParmaA42 = \"High\"\n",
    "        ALHO42 = (240, 10, 0)\n",
    "    elif S42 == 99:\n",
    "        ParmaA42 = \"Normal\"\n",
    "        ALHO42 = (0, 255, 0)\n",
    "    elif S42 == 33:\n",
    "        ParmaA42 = \"Low\"\n",
    "        ALHO42 = (240, 10, 0)\n",
    "    \n",
    "    if S43 == 165:\n",
    "        ParmaA43 = \"High\"\n",
    "        ALHO43 = (240, 10, 0)\n",
    "    elif S43 == 99:\n",
    "        ParmaA43 = \"Normal\"\n",
    "        ALHO43 = (0, 255, 0)\n",
    "    elif S43 == 33:\n",
    "        ParmaA43 = \"Low\"\n",
    "        ALHO43 = (240, 10, 0)\n",
    "    \n",
    "    if S44 == 165:\n",
    "        ParmaA44 = \"High\"\n",
    "        ALHO44 = (240, 10, 0)\n",
    "    elif S44 == 99:\n",
    "        ParmaA44 = \"Normal\"\n",
    "        ALHO44 = (0, 255, 0)\n",
    "    elif S44 == 33:\n",
    "        ParmaA44 = \"Low\"\n",
    "        ALHO44 = (240, 10, 0)\n",
    "    \n",
    "    if S45 == 165:\n",
    "        ParmaA45 = \"High\"\n",
    "        ALHO45 = (240, 10, 0)\n",
    "    elif S45 == 99:\n",
    "        ParmaA45 = \"Normal\"\n",
    "        ALHO45 = (0, 255, 0)\n",
    "    elif S45 == 33:\n",
    "        ParmaA45 = \"Low\"\n",
    "        ALHO45 = (240, 10, 0)\n",
    "    \n",
    "    if S46 == 165:\n",
    "        ParmaA46 = \"High\"\n",
    "        ALHO46 = (240, 10, 0)\n",
    "    elif S46 == 99:\n",
    "        ParmaA46 = \"Normal\"\n",
    "        ALHO46 = (0, 255, 0)\n",
    "    elif S46 == 33:\n",
    "        ParmaA46 = \"Low\"\n",
    "        ALHO46 = (240, 10, 0)\n",
    "    \n",
    "    if S47 == 165:\n",
    "        ParmaA47 = \"High\"\n",
    "        ALHO47 = (240, 10, 0)\n",
    "    elif S47 == 99:\n",
    "        ParmaA47 = \"Normal\"\n",
    "        ALHO47 = (0, 255, 0)\n",
    "    elif S47 == 33:\n",
    "        ParmaA47 = \"Low\"\n",
    "        ALHO47 = (240, 10, 0)\n",
    "    \n",
    "    if S48 == 165:\n",
    "        ParmaA48 = \"High\"\n",
    "        ALHO48 = (240, 10, 0)\n",
    "    elif S48 == 99:\n",
    "        ParmaA48 = \"Normal\"\n",
    "        ALHO48 = (0, 255, 0)\n",
    "    elif S48 == 33:\n",
    "        ParmaA48 = \"Low\"\n",
    "        ALHO48 = (240, 10, 0)\n",
    "    \n",
    "    if S49 == 165:\n",
    "        ParmaA49 = \"High\"\n",
    "        ALHO49 = (240, 10, 0)\n",
    "    elif S49 == 99:\n",
    "        ParmaA49 = \"Normal\"\n",
    "        ALHO49 = (0, 255, 0)\n",
    "    elif S49 == 33:\n",
    "        ParmaA49 = \"Low\"\n",
    "        ALHO49 = (240, 10, 0)\n",
    "    \n",
    "    if S50 == 165:\n",
    "        ParmaA50 = \"High\"\n",
    "        ALHO50 = (240, 10, 0)\n",
    "    elif S50 == 99:\n",
    "        ParmaA50 = \"Normal\"\n",
    "        ALHO50 = (0, 255, 0)\n",
    "    elif S50 == 33:\n",
    "        ParmaA50 = \"Low\"\n",
    "        ALHO50 = (240, 10, 0)\n",
    "    \n",
    "    if S51 == 165:\n",
    "        ParmaA51 = \"High\"\n",
    "        ALHO51 = (240, 10, 0)\n",
    "    elif S51 == 99:\n",
    "        ParmaA51 = \"Normal\"\n",
    "        ALHO51 = (0, 255, 0)\n",
    "    elif S51 == 33:\n",
    "        ParmaA51 = \"Low\"\n",
    "        ALHO51 = (240, 10, 0)\n",
    "    \n",
    "    if S52 == 165:\n",
    "        ParmaA52 = \"High\"\n",
    "        ALHO52 = (240, 10, 0)\n",
    "    elif S52 == 99:\n",
    "        ParmaA52 = \"Normal\"\n",
    "        ALHO52 = (0, 255, 0)\n",
    "    elif S52 == 33:\n",
    "        ParmaA52 = \"Low\"\n",
    "        ALHO52 = (240, 10, 0)\n",
    "    \n",
    "    if S53 == 165:\n",
    "        ParmaA53 = \"High\"\n",
    "        ALHO53 = (240, 10, 0)\n",
    "    elif S53 == 99:\n",
    "        ParmaA53 = \"Normal\"\n",
    "        ALHO53 = (0, 255, 0)\n",
    "    elif S53 == 33:\n",
    "        ParmaA53 = \"Low\"\n",
    "        ALHO53 = (240, 10, 0)\n",
    "    \n",
    "    if S54 == 165:\n",
    "        ParmaA54 = \"High\"\n",
    "        ALHO54 = (240, 10, 0)\n",
    "    elif S54 == 99:\n",
    "        ParmaA54 = \"Normal\"\n",
    "        ALHO54 = (0, 255, 0)\n",
    "    elif S54 == 33:\n",
    "        ParmaA54 = \"Low\"\n",
    "        ALHO54 = (240, 10, 0)\n",
    "    \n",
    "    if S55 == 165:\n",
    "        ParmaA55 = \"High\"\n",
    "        ALHO55 = (240, 10, 0)\n",
    "    elif S55 == 99:\n",
    "        ParmaA55 = \"Normal\"\n",
    "        ALHO55 = (0, 255, 0)\n",
    "    elif S55 == 33:\n",
    "        ParmaA55 = \"Low\"\n",
    "        ALHO55 = (240, 10, 0)\n",
    "    \n",
    "    if S56 == 165:\n",
    "        ParmaA56 = \"High\"\n",
    "        ALHO56 = (240, 10, 0)\n",
    "    elif S56 == 99:\n",
    "        ParmaA56 = \"Normal\"\n",
    "        ALHO56 = (0, 255, 0)\n",
    "    elif S56 == 33:\n",
    "        ParmaA56 = \"Low\"\n",
    "        ALHO56 = (240, 10, 0)\n",
    "    \n",
    "    if S57 == 165:\n",
    "        ParmaA57 = \"High\"\n",
    "        ALHO57 = (240, 10, 0)\n",
    "    elif S57 == 99:\n",
    "        ParmaA57 = \"Normal\"\n",
    "        ALHO57 = (0, 255, 0)\n",
    "    elif S57 == 33:\n",
    "        ParmaA57 = \"Low\"\n",
    "        ALHO57 = (240, 10, 0)\n",
    "    \n",
    "    if S58 == 165:\n",
    "        ParmaA58 = \"High\"\n",
    "        ALHO58 = (240, 10, 0)\n",
    "    elif S58 == 99:\n",
    "        ParmaA58 = \"Normal\"\n",
    "        ALHO58 = (0, 255, 0)\n",
    "    elif S58 == 33:\n",
    "        ParmaA58 = \"Low\"\n",
    "        ALHO58 = (240, 10, 0)\n",
    "    \n",
    "    if S59 == 165:\n",
    "        ParmaA59 = \"High\"\n",
    "        ALHO59 = (240, 10, 0)\n",
    "    elif S59 == 99:\n",
    "        ParmaA59 = \"Normal\"\n",
    "        ALHO59 = (0, 255, 0)\n",
    "    elif S59 == 33:\n",
    "        ParmaA59 = \"Low\"\n",
    "        ALHO59 = (240, 10, 0)\n",
    "    \n",
    "    if S60 == 165:\n",
    "        ParmaA60 = \"High\"\n",
    "        ALHO60 = (240, 10, 0)\n",
    "    elif S60 == 99:\n",
    "        ParmaA60 = \"Normal\"\n",
    "        ALHO60 = (0, 255, 0)\n",
    "    elif S60 == 33:\n",
    "        ParmaA60 = \"Low\"\n",
    "        ALHO60 = (240, 10, 0)\n",
    "    \n",
    "    if S61 == 165:\n",
    "        ParmaA61 = \"High\"\n",
    "        ALHO61 = (240, 10, 0)\n",
    "    elif S61 == 99:\n",
    "        ParmaA61 = \"Normal\"\n",
    "        ALHO61 = (0, 255, 0)\n",
    "    elif S61 == 33:\n",
    "        ParmaA61 = \"Low\"\n",
    "        ALHO61 = (240, 10, 0)\n",
    "    \n",
    "    if S62 == 165:\n",
    "        ParmaA62 = \"High\"\n",
    "        ALHO62 = (240, 10, 0)\n",
    "    elif S62 == 99:\n",
    "        ParmaA62 = \"Normal\"\n",
    "        ALHO62 = (0, 255, 0)\n",
    "    elif S62 == 33:\n",
    "        ParmaA62 = \"Low\"\n",
    "        ALHO62 = (240, 10, 0)\n",
    "    \n",
    "    if S63 == 165:\n",
    "        ParmaA63 = \"High\"\n",
    "        ALHO63 = (240, 10, 0)\n",
    "    elif S63 == 99:\n",
    "        ParmaA63 = \"Normal\"\n",
    "        ALHO63 = (0, 255, 0)\n",
    "    elif S63 == 33:\n",
    "        ParmaA63 = \"Low\"\n",
    "        ALHO63 = (240, 10, 0)\n",
    "    \n",
    "    if S64 == 165:\n",
    "        ParmaA64 = \"High\"\n",
    "        ALHO64 = (240, 10, 0)\n",
    "    elif S64 == 99:\n",
    "        ParmaA64 = \"Normal\"\n",
    "        ALHO64 = (0, 255, 0)\n",
    "    elif S64 == 33:\n",
    "        ParmaA64 = \"Low\"\n",
    "        ALHO64 = (240, 10, 0)\n",
    "    \n",
    "    if S65 == 165:\n",
    "        ParmaA65 = \"High\"\n",
    "        ALHO65 = (240, 10, 0)\n",
    "    elif S65 == 99:\n",
    "        ParmaA65 = \"Normal\"\n",
    "        ALHO65 = (0, 255, 0)\n",
    "    elif S65 == 33:\n",
    "        ParmaA65 = \"Low\"\n",
    "        ALHO65 = (240, 10, 0)\n",
    "    \n",
    "    if S66 == 165:\n",
    "        ParmaA66 = \"High\"\n",
    "        ALHO66 = (240, 10, 0)\n",
    "    elif S66 == 99:\n",
    "        ParmaA66 = \"Normal\"\n",
    "        ALHO66 = (0, 255, 0)\n",
    "    elif S66 == 33:\n",
    "        ParmaA66 = \"Low\"\n",
    "        ALHO66 = (240, 10, 0)\n",
    "    \n",
    "    if S67 == 165:\n",
    "        ParmaA67 = \"High\"\n",
    "        ALHO67 = (240, 10, 0)\n",
    "    elif S67 == 99:\n",
    "        ParmaA67 = \"Normal\"\n",
    "        ALHO67 = (0, 255, 0)\n",
    "    elif S67 == 33:\n",
    "        ParmaA67 = \"Low\"\n",
    "        ALHO67 = (240, 10, 0)\n",
    "    \n",
    "    if S68 == 165:\n",
    "        ParmaA68 = \"High\"\n",
    "        ALHO68 = (240, 10, 0)\n",
    "    elif S68 == 99:\n",
    "        ParmaA68 = \"Normal\"\n",
    "        ALHO68 = (0, 255, 0)\n",
    "    elif S68 == 33:\n",
    "        ParmaA68 = \"Low\"\n",
    "        ALHO68 = (240, 10, 0)\n",
    "    \n",
    "    if S69 == 165:\n",
    "        ParmaA69 = \"High\"\n",
    "        ALHO69 = (240, 10, 0)\n",
    "    elif S69 == 99:\n",
    "        ParmaA69 = \"Normal\"\n",
    "        ALHO69 = (0, 255, 0)\n",
    "    elif S69 == 33:\n",
    "        ParmaA69 = \"Low\"\n",
    "        ALHO69 = (240, 10, 0)\n",
    "    \n",
    "    if S70 == 165:\n",
    "        ParmaA70 = \"High\"\n",
    "        ALHO70 = (240, 10, 0)\n",
    "    elif S70 == 99:\n",
    "        ParmaA70 = \"Normal\"\n",
    "        ALHO70 = (0, 255, 0)\n",
    "    elif S70 == 33:\n",
    "        ParmaA70 = \"Low\"\n",
    "        ALHO70 = (240, 10, 0)\n",
    "\n",
    "\n",
    "    \n",
    "    \n",
    "\n",
    "    from fpdf import FPDF\n",
    "\n",
    "    parameters_list = [\n",
    "    \"Height\", \"Weight\", \"BMI\", \"Body Fat\", \"Subcutaneous Fat\", \n",
    "    \"Visceral Fat\", \"Body Water\", \"Skeletal Muscle\", \"Lean Mass\",\n",
    "    \"Bone Mass\", \"Protein\", \"BMR\", \"Metabolic Age\", \"Health Score\",\n",
    "    \"Right Arm Lean Mass\", \"Left Arm Lean Mass\", \"Trunk Lean Mass\",\n",
    "    \"Right Leg Lean Mass\", \"Left Leg Lean Mass\", \"Right Arm Fat\"\n",
    "    ]\n",
    "\n",
    "\n",
    "  \n",
    "\n",
    "   # L22, L32, L42 shifted for name labeling.\n",
    "\n",
    "    \n",
    "\n",
    "    CELL1 = L1 \n",
    "    CELL2 = L2 \n",
    "    CELL3 = L3 \n",
    "    CELL4 = L4 \n",
    "    CELL5 = L12 \n",
    "    CELL6 = L32 \n",
    "    CELL7 = L31 \n",
    "    CELL8 = L25 \n",
    "    CELL9 = L26\n",
    "    CELL10 = L27\n",
    "\n",
    "\n",
    "\n",
    "    CELLO1 = str(LG1) +\" \"+  ACB1 # Weight\n",
    "    CELLO2 = str(LG2) +\" \"+  ACB2 # Height\n",
    "    CELLO3 = str(LG3) +\" \"+  ACB3 # BMI\n",
    "    CELLO4 = str(LG4) +\" \"+  ACB4 # body fat\n",
    "    CELLO5 = str(LG12) +\" \"+ ACB12 # BMR\n",
    "    CELLO6 = str(LG32) + \" \" +  ACB32 # Hemoglobin\n",
    "    CELLO7 = str(LG31) + \" \" +  ACB31 #  Blood Glucose\n",
    "    CELLO8 = str(LG25) + \" \" + ACB25 # SPO2 Oxygen level\n",
    "    CELLO9 = str(LG26) + \" \" + ACB26 # Systolic Blood Pressure\n",
    "    CELLO10 = str(LG27) + \" \" + ACB27 # Dilotic Blood Pressure\n",
    "\n",
    "\n",
    "    UND1 = \"Low\"\n",
    "    UND2 = \"Normal\"\n",
    "    UND3 = \"High\"\n",
    "    \n",
    "    Param1 = L1\n",
    "    Param2 = L2\n",
    "    Param3 = L3\n",
    "    Param4 = L4\n",
    "    Param5 = L12\n",
    "    Param6 = L32\n",
    "    Param7 = L31\n",
    "    Param8 = L25\n",
    "    Param9 = L26\n",
    "    Param10 = L27\n",
    "    Param31 = L31\n",
    "    Param32 = L32\n",
    "\n",
    "    \n",
    "    Name1 = Name      #   Name of the person\n",
    "    consultation_date = str(CBA1) # Consultation date\n",
    "    consultation_ID = str(CBA5) # Consultation date\n",
    "    Patient_ID = str(CBA4) # Consultation date\n",
    "    Blood = str(BCA7)   # Blood Group\n",
    "    gender = BCA6  #  Gender\n",
    "        \n",
    "    zRAB1='Hello'    #    Different recommendation for different things.(comong right below the reading)\n",
    "    h1 = \"Reading is good\"\n",
    "    \n",
    "    REC1 = \"Reading is good\"\n",
    "    REC2 = \"Reading is good\"\n",
    "    REC3 = \"Reading is good\"\n",
    "    REC4 = \"Reading is good\"\n",
    "    REC5 = \"Reading is good\"\n",
    "    REC31 = \"Reading is good\"\n",
    "    REC32 = \"Reading is good\"\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    additional_image_path_1 = 'D:\\\\Saukhiaya pdf\\\\weight.jpg'\n",
    "    additional_image_path_2 = 'D:\\\\Saukhiaya pdf\\\\height.jpg'\n",
    "    additional_image_path_3 = 'D:\\\\Saukhiaya pdf\\\\BMI.jpg'\n",
    "    additional_image_path_4 = \"D:\\\\Saukhiaya pdf\\\\BODYFAT.jpg\"\n",
    "    additional_image_path_5 = \"D:\\\\Saukhiaya pdf\\\\BMR.jpg\"\n",
    "    additional_image_path_6 = \"D:\\\\Saukhiaya pdf\\\\HEMOGLOBIN.jpg\"\n",
    "    additional_image_path_7 = \"D:\\\\Saukhiaya pdf\\\\GLUCOSE.jpg\"\n",
    "    additional_image_path_8 = \"D:\\\\Saukhiaya pdf\\\\SPO2.jpg\"\n",
    "    additional_image_path_9 = \"D:\\\\Saukhiaya pdf\\\\DBP.jpg\"\n",
    "    additional_image_path_10 = \"D:\\\\Saukhiaya pdf\\\\DBP.jpg\"\n",
    "    additional_image_path_31 = \"D:\\\\Saukhiaya pdf\\\\DBP.jpg\"\n",
    "    additional_image_path_32 = \"D:\\\\Saukhiaya pdf\\\\DBP.jpg\"\n",
    " \n",
    "\n",
    "    # Variables for rectangle positions\n",
    "    # X position for the second rectangle\n",
    "\n",
    "    # Defined as S1 to S70 for different positions.\n",
    "\n",
    "\n",
    "    class PDF(FPDF):\n",
    "        def footer(self):\n",
    "        # Example footer that includes the page number\n",
    "            self.set_y(-15)\n",
    "            self.set_font('Arial', 'I', 8)\n",
    "            self.cell(0, 10, 'Page ' + str(self.page_no()), 0, 0, 'C')\n",
    "\n",
    "    # Create an instance of the PDF class and add a page\n",
    "    pdf = PDF()\n",
    "    pdf.add_page()\n",
    "\n",
    "    # Now add the content previously in the header method directly to the page\n",
    "\n",
    "    # Set deeper blue fill color and draw a rectangle\n",
    "    pdf.set_fill_color(173, 216, 230)\n",
    "    pdf.rect(10, 8, 200, 25, 'F')\n",
    "\n",
    "    # Place the logo\n",
    "    image_path = r'D:\\Saukhiaya pdf\\logo\\logo1.jpeg'\n",
    "    pdf.image(image_path, x=10, y=8, w=30)\n",
    "\n",
    "    # Add \"Saunkhya\" text\n",
    "    pdf.set_font('Arial', 'B', 16)\n",
    "    pdf.set_text_color(255, 255, 255)\n",
    "    pdf.set_xy(190, 13)\n",
    "    pdf.cell(0, 10, 'Saunkhya', 0, 0, 'R')\n",
    "\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Patient Name\n",
    "    pdf.set_xy(190, 35)\n",
    "    pdf.cell(0, 10, f\"Patient Name: {Name1}\", 0, 0, 'R')\n",
    "    \n",
    "    # Cunsultation date\n",
    "    pdf.set_xy(10, 40)\n",
    "    pdf.cell(0, 10, f\"Consultation Date: {consultation_date}\", 0, 0, 'L')\n",
    "\n",
    "\n",
    "    pdf.set_xy(10, 45)\n",
    "    pdf.cell(0, 10, f\"Consultation ID: {consultation_ID}\", 0, 0, 'L')\n",
    "\n",
    "    \n",
    "    pdf.set_xy(10, 50)\n",
    "    pdf.cell(0, 10, f\"Patient ID: {Patient_ID}\", 0, 0, 'L')\n",
    "\n",
    "    # Age\n",
    "    pdf.set_xy(190, 40)\n",
    "    pdf.cell(0, 10, f\"Age: {age}\", 0, 0, 'R')\n",
    "\n",
    "    # Blood group\n",
    "    pdf.set_xy(190, 45)\n",
    "    pdf.cell(0, 10, f\"Blood Group: {Blood}\", 0, 0, 'R')\n",
    "\n",
    "    # Gender\n",
    "    pdf.set_xy(190, 50)\n",
    "    pdf.cell(0, 10, f\"Gender: {gender}\", 0, 0, 'R')\n",
    "\n",
    "\n",
    "\n",
    "    # Draw a line directly after the \"Gender\" text\n",
    "    line_y_offset = 8  # Spacing below the gender text\n",
    "    current_y = pdf.get_y() + line_y_offset\n",
    "    pdf.set_draw_color(0, 0, 0)  # Black line color\n",
    "    pdf.line(10, current_y, 200, current_y)\n",
    "\n",
    "    # Add a rectangle on the right-hand side below the line\n",
    "    right_rect_x = 150  # Adjusted X position for the right-side rectangle to be within page bounds\n",
    "    right_rect_y = current_y + 10  # Y position for the right-side rectangle (10 units below the line)\n",
    "    right_rect_width = 50  # Adjusted width of the right-side rectangle\n",
    "    right_rect_height = 50  # Height of the right-side rectangle\n",
    "\n",
    "\n",
    "\n",
    "    # Position and dimensions for the text box\n",
    "    text_box_x = 10\n",
    "    text_box_y = current_y + 10  # Position it below the rectangle\n",
    "    text_box_width = 130  # Width to ensure it doesn't overlap with the rectangle\n",
    "    text_box_height = 30  # Height of the text box\n",
    "    \n",
    "    # Name\n",
    "    pdf.set_xy(text_box_x, text_box_y)\n",
    "    pdf.cell(0, 10, f\" {Name1}\", 0, 0, 'L')\n",
    "    \n",
    "    # Text to be added\n",
    "    report_text = (\n",
    "        \"This report has been generated by Saunkhya LLP to determine the health condition of the patient \"\n",
    "        \"based on various parameters. The analysis includes metrics such as weight, height, BMI, body fat percentage, \"\n",
    "        \"hemoglobin levels, and glucose levels among others. These parameters provide a comprehensive overview of the \"\n",
    "        \"patient's health status.\"\n",
    "    )\n",
    "    \n",
    "    # Set font and color for the text\n",
    "    pdf.set_font('Arial', 'I', 8)  # Italic font\n",
    "    pdf.set_text_color(0, 0, 0)  # Black text color\n",
    "    \n",
    "    # Add the text within the defined box\n",
    "    pdf.set_xy(text_box_x, text_box_y + 10)\n",
    "    pdf.multi_cell(text_box_width, 10, report_text)\n",
    "\n",
    "    line_y_offset = 8  # Spacing below the gender text\n",
    "    current_y = pdf.get_y() + line_y_offset\n",
    "    pdf.set_draw_color(0, 0, 0)  # Black line color\n",
    "    pdf.line(10, current_y, 200, current_y)\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "    pdf.set_draw_color(255, 165, 0)  # Border color (black)\n",
    "    pdf.set_fill_color(255, 165, 0)  # Orange fill color\n",
    "    \n",
    "    pdf.rect(right_rect_x, right_rect_y, right_rect_width, right_rect_height, 'DF')\n",
    "    \n",
    "    circle_center_x = right_rect_x + 11 \n",
    "    circle_center_y = right_rect_y + 11\n",
    "    \n",
    "    # Draw the circle\n",
    "   \n",
    "    pdf.set_draw_color(255, 255, 255)  # Border color for the circle (black)\n",
    "    pdf.ellipse(circle_center_x  , circle_center_y , 30 , 30 , 'DF')\n",
    "    \n",
    "\n",
    "\n",
    "    text = \"20\"\n",
    "    pdf.set_font('Arial', 'I', 40)  # Set font and size\n",
    "    pdf.set_text_color(255, 255, 255)  # Set text color (black)\n",
    "    \n",
    "    # Calculate text position\n",
    "    text_x = right_rect_x + 25.5 - (pdf.get_string_width(text) / 2)\n",
    "    text_y = right_rect_y + 27  # Center vertically and adjust for font height\n",
    "    \n",
    "    # Add the text\n",
    "    pdf.text(text_x, text_y, text)\n",
    "\n",
    "    \n",
    "    text1 = \"Out of 100\"\n",
    "    pdf.set_font('Arial', 'I', 12)  # Set font and size\n",
    "    pdf.set_text_color(255, 255, 255)  # Set text color (black)\n",
    "    \n",
    "    # Calculate text position\n",
    "    text_x1 = right_rect_x + 25.5 - (pdf.get_string_width(text1) / 2)\n",
    "    text_y1 = right_rect_y + 32  # Center vertically and adjust for font height\n",
    "    \n",
    "    # Add the text\n",
    "    pdf.text(text_x1, text_y1, text1)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "   #  Below the score code\n",
    "\n",
    "    \n",
    "    \n",
    "        \n",
    "    # Add a new centered image below the line\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "    \n",
    "    new_image_path = r'D:\\Saukhiaya pdf\\body2.jpg'\n",
    "    image_width1 = 50\n",
    "    image_y_position = current_y + 20\n",
    "    pdf.image(new_image_path, x=(210 - image_width1) / 2, y=image_y_position, w=image_width1)\n",
    "\n",
    "\n",
    "    #  Function for parameters beside the image\n",
    "\n",
    "    # image and text 1 Right\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_2  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x = ((210 - image_width) / 2) + 50, y=current_y, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = ((210 - image_width) / 2) + 50 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL2)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "    \n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO2)\n",
    "\n",
    "        # image and text 2 Right\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_4  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x = ((210 - image_width) / 2) + 50, y=current_y + 25, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = ((210 - image_width) / 2) + 50 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + 25 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL4)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 25 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO4)\n",
    "\n",
    "        # image and text 3 Right\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_6  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x = ((210 - image_width) / 2) + 50, y=current_y + 50, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = ((210 - image_width) / 2) + 50 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + 50  + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL6)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 50 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO6)\n",
    "\n",
    "    \n",
    "\n",
    "     # image and text 4 Right\n",
    "    \n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_8  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x = ((210 - image_width) / 2) + 50, y=current_y + 75, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = ((210 - image_width) / 2) + 50 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + 75 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL8)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 75 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO8)\n",
    "\n",
    "\n",
    "         # image and text 5 Right\n",
    "    \n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_10  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x = ((210 - image_width) / 2) + 50, y=current_y + 100, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = ((210 - image_width) / 2) + 50 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    if len(CELL10) > 15:\n",
    "        CELL10 = CELL10[:15] + '...'\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + 100 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL10)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 6 + current_y + 100 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO10)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    # image and text 1 left\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_1  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x=10, y=current_y, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = 10 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position, current_y + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL1)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO1)\n",
    "\n",
    "    #image and text 2 left\n",
    "\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_3  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x=10, y=current_y + 25, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = 10 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position,   current_y + 25 +  (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL3)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 25 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO3)\n",
    "\n",
    "    # image and text 3 left\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_5  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x=10, y=current_y + 50, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = 10 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position,  current_y + 50 + (image_width / 2) - 5) # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL5)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 50 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO5)\n",
    "\n",
    "    # image and text 4 left\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_7  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x=10, y=current_y + 75, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = 10 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position,  current_y + 75 + (image_width / 2) - 5) # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL7)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 75 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO7)\n",
    "\n",
    "       # image and text 5 left\n",
    "\n",
    "    current_y = image_y_position  # Y position of the centered image, adjust as necessary\n",
    "    image_path = additional_image_path_9  # Path to the logo image  # Path to your image\n",
    "    image_width = 20  # Width of the image in mm\n",
    "    # Example text to display\n",
    "\n",
    "    # Place the image at the start of the X position and at the current_y\n",
    "    pdf.image(image_path, x=10, y=current_y + 100, w=image_width)\n",
    "\n",
    "    # Calculate the x position for the text based on the image width\n",
    "    # Assuming a small margin of 5 mm between the image and the text\n",
    "    text_x_position = 10 + image_width + 5\n",
    "\n",
    "    pdf.set_font('Times', '', 15)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    \n",
    "    # Add text immediately to the right of the image\n",
    "    pdf.set_xy(text_x_position,  current_y + 100 + (image_width / 2) - 5) # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 8, CELL9)\n",
    "\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.set_text_color(0, 0, 0)\n",
    "\n",
    "    # text below the text\n",
    "    pdf.set_xy(text_x_position, 4 + current_y + 100 + (image_width / 2) - 5)  # Adjust text vertical position as needed\n",
    "    pdf.cell(0, 10, CELLO9)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    # Continue adding content as needed...\n",
    "    # pdf.cell(0, 10, 'More content here...', 0, 1)\n",
    "\n",
    "    SOR = 0\n",
    "\n",
    "    pdf.add_page()\n",
    "\n",
    "    \n",
    "    last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    # Common parameters\n",
    "    image_start_x = 5  # Starting X position for line images\n",
    "    image_width = 200  # Width of the line images\n",
    "    line_image_height = 2  # Height of the line images, assuming both have the same height\n",
    "    additional_image_size = 10  # Size for the additional images (5mm x 5mm)\n",
    "    rect_height = 4  # Height of the rectangle\n",
    "\n",
    "\n",
    "    right_rect_width_Small = 10  # Adjusted width of the right-side rectangle\n",
    "    right_rect_height_Small = 5  # Height of the right-side rectangle\n",
    "\n",
    "\n",
    "    \n",
    "    \n",
    "    if Alpha1 == 5:\n",
    "\n",
    "        # First set of elements: line image, rectangle, additional image, and text\n",
    "        image_y_1 = last_image_bottom_y  # Y position for the first line image\n",
    "    \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_1, x=5, y=image_y_1 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "    \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_1, w=image_width, h=line_image_height)\n",
    "    \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_1 = image_y_1 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S1, rect_y_1, 1, rect_height, 'F')  # S1 shows the position of the X value so it come under the exact low normal high condition.\n",
    "    \n",
    "    \n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S1 - 3, rect_y_1 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T1)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_1 = 5 + additional_image_size + 10  # Adjust the spacing as needed for x position\n",
    "        pdf.set_xy(alpha_x_1, image_y_1 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param1)\n",
    "\n",
    "        pdf.set_fill_color(*ALHO1)\n",
    "        pdf.set_draw_color(*ALHO1)\n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA1) + 2\n",
    "\n",
    "        pdf.rect(175, image_y_1 - additional_image_size - 13, right_rect_width_Small  , right_rect_height_Small, 'DF')\n",
    "\n",
    "        alpha_x_A1 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A1, image_y_1 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA1)\n",
    "\n",
    "\n",
    "\n",
    "        text_below_line_y1 = image_y_1 + line_image_height + 5  # Adjust spacing as needed\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y1 + 3 )  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC1)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33 , text_below_line_y1 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99 , text_below_line_y1 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(166 , text_below_line_y1 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "\n",
    "                # Text below the line image\n",
    "        pdf.set_xy(66 , text_below_line_y1 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT1)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(139 , text_below_line_y1 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT2)\n",
    "\n",
    "        SOR = 1\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "    # Second set of elements: line image, rectangle, additional image, and text\n",
    "\n",
    "    if Alpha2 == 5:\n",
    "        image_y_2 = last_image_bottom_y  # Y position for the second line image\n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_2, x = 5, y = image_y_2 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x = image_start_x , y= image_y_2 , w = image_width, h = line_image_height)\n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_2 = image_y_2 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S2, rect_y_2, 1, rect_height, 'F')\n",
    "\n",
    "\n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S2 -3 , rect_y_2 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T2)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_2 = 5 + additional_image_size + 10  # Adjust the spacing as needed for x positioon\n",
    "        pdf.set_xy(alpha_x_2, image_y_2 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param2)\n",
    "\n",
    "\n",
    "        pdf.set_fill_color(*ALHO2)\n",
    "        pdf.set_draw_color(*ALHO2)\n",
    "\n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA2) + 2\n",
    "\n",
    "        pdf.rect(175, image_y_2 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "\n",
    "        alpha_x_A2 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A2, image_y_2 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA2)\n",
    "        \n",
    "        \n",
    "\n",
    "        text_below_line_y2 = image_y_2 + line_image_height + 5\n",
    "    \n",
    "           # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y2+ 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC2)\n",
    "\n",
    "                # Text below the line image\n",
    "        pdf.set_xy(33 , text_below_line_y2 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99 , text_below_line_y2 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(166 , text_below_line_y2 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(66 , text_below_line_y2 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, PAT3)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(139 , text_below_line_y2 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, PAT4)\n",
    "\n",
    "\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "        SOR = SOR + 1\n",
    "        \n",
    "\n",
    "     # Third set of elements: line image, rectangle, additional image, and text\n",
    "    if Alpha3 == 5:\n",
    "        image_y_3 = last_image_bottom_y  # Y position for the second line image\n",
    "        \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_3, x=5, y=image_y_3 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "        \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y = image_y_3, w=image_width, h=line_image_height)\n",
    "        \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_3 = image_y_3 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S3, rect_y_3, 1, rect_height, 'F')\n",
    "    \n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S3 -3 , rect_y_3 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T3)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_3 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_3, image_y_3 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param3)\n",
    "\n",
    "        pdf.set_fill_color(*ALHO3)\n",
    "        pdf.set_draw_color(*ALHO3)\n",
    "\n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA3) + 2\n",
    "\n",
    "        pdf.rect(175, image_y_3 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "\n",
    "        alpha_x_A3 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A3, image_y_3 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA3)\n",
    "        \n",
    "\n",
    "        text_below_line_y3 = image_y_3 + line_image_height + 5\n",
    "    \n",
    "           # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y3 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC3)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33 , text_below_line_y3 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99 , text_below_line_y3 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(166 , text_below_line_y3 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "\n",
    "                     # Text below the line image\n",
    "        pdf.set_xy(66 , text_below_line_y3 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT5)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(139 , text_below_line_y3 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT6)\n",
    "\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "        SOR = SOR + 1\n",
    "    \n",
    "      # Forth set of elements: line image, rectangle, additional image, and text\n",
    "        \n",
    "    if Alpha4 ==5:\n",
    "        image_y_4 = last_image_bottom_y # Y position for the second line image\n",
    "        \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_4, x=5, y = image_y_4 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "        \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y = image_y_4 , w=image_width, h=line_image_height)\n",
    "        \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_4 = image_y_4 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S4, rect_y_4, 1, rect_height, 'F')\n",
    "    \n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S4 -3 , rect_y_4 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T4)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_4 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_4, image_y_4 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param4)\n",
    "\n",
    "        pdf.set_fill_color(*ALHO4)\n",
    "        pdf.set_draw_color(*ALHO4)\n",
    "\n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA4) + 2\n",
    "        \n",
    "        pdf.rect(175, image_y_4 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "\n",
    "        alpha_x_A4 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A4, image_y_4 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA4)\n",
    "        \n",
    "        text_below_line_y4 = image_y_4 + line_image_height + 5\n",
    "        \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y4 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC4)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33 , text_below_line_y4 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "\n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99 , text_below_line_y4 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(166 , text_below_line_y4 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "\n",
    "                     # Text below the line image\n",
    "        pdf.set_xy(66 , text_below_line_y4 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT7)\n",
    "\n",
    "         # Text below the line image\n",
    "        pdf.set_xy(139 , text_below_line_y4 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT8)\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "        SOR = SOR + 1\n",
    "\n",
    "    if SOR == 4:\n",
    "        SOR = 0\n",
    "        pdf.add_page() \n",
    "        last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "    \n",
    "    if Alpha5 == 5:\n",
    "        image_y_5 = last_image_bottom_y  # Y position for the fifth line image\n",
    "    \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_5, x=5, y=image_y_5 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "    \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_5, w=image_width, h=line_image_height)\n",
    "    \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_5 = image_y_5 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S5, rect_y_5, 1, rect_height, 'F')\n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S5 - 3, rect_y_5 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T5)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_5 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_5, image_y_5 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param5)\n",
    "    \n",
    "        pdf.set_fill_color(*ALHO5)\n",
    "        pdf.set_draw_color(*ALHO5)\n",
    "    \n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA5) + 2\n",
    "    \n",
    "        pdf.rect(175, image_y_5 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "    \n",
    "        alpha_x_A5 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A5, image_y_5 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA5)\n",
    "    \n",
    "        text_below_line_y5 = image_y_5 + line_image_height + 5\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y5 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC5)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33, text_below_line_y5 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99, text_below_line_y5 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(166, text_below_line_y5 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(66, text_below_line_y5 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT9)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(139, text_below_line_y5 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT10)\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "        SOR = SOR + 1\n",
    "\n",
    "    if SOR == 4:\n",
    "        SOR = 0\n",
    "        pdf.add_page() \n",
    "        last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "\n",
    "    \n",
    "    if Alpha6 == 5:\n",
    "        image_y_6 = last_image_bottom_y  # Y position for the sixth line image\n",
    "    \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_6, x=5, y=image_y_6 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "    \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_6, w=image_width, h=line_image_height)\n",
    "    \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_6 = image_y_6 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S6, rect_y_6, 1, rect_height, 'F')\n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S6 - 3, rect_y_6 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T6)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_6 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_6, image_y_6 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param6)\n",
    "    \n",
    "        pdf.set_fill_color(*ALHO6)\n",
    "        pdf.set_draw_color(*ALHO6)\n",
    "    \n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA6) + 2\n",
    "    \n",
    "        pdf.rect(175, image_y_6 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "    \n",
    "        alpha_x_A6 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A6, image_y_6 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA6)\n",
    "    \n",
    "        text_below_line_y6 = image_y_6 + line_image_height + 5\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y6 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC6)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33, text_below_line_y6 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99, text_below_line_y6 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(166, text_below_line_y6 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(66, text_below_line_y6 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT11)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(139, text_below_line_y6 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT12)\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "        SOR = SOR + 1\n",
    "\n",
    "\n",
    "    if SOR == 4:\n",
    "        SOR = 0\n",
    "        pdf.add_page() \n",
    "        last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "\n",
    "\n",
    "    if Alpha31 == 5:\n",
    "        image_y_31 = last_image_bottom_y  # Y position for the thirty-first line image\n",
    "    \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_31, x=5, y=image_y_31 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "    \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_31, w=image_width, h=line_image_height)\n",
    "    \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_31 = image_y_31 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S31, rect_y_31, 1, rect_height, 'F')\n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S31 - 3, rect_y_31 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T31)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_31 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_31, image_y_31 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param31)\n",
    "    \n",
    "        pdf.set_fill_color(*ALHO31)\n",
    "        pdf.set_draw_color(*ALHO31)\n",
    "    \n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA31) + 2\n",
    "    \n",
    "        pdf.rect(175, image_y_31 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "    \n",
    "        alpha_x_A31 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A31, image_y_31 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA31)\n",
    "    \n",
    "        text_below_line_y31 = image_y_31 + line_image_height + 5\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y31 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC31)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33, text_below_line_y31 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99, text_below_line_y31 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(166, text_below_line_y31 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(66, text_below_line_y31 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT61)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(139, text_below_line_y31 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT62)\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "\n",
    "        SOR = SOR + 1\n",
    "\n",
    "    if SOR == 4:\n",
    "        SOR = 0\n",
    "        pdf.add_page() \n",
    "        last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "\n",
    "\n",
    "    if Alpha32 == 5:\n",
    "        image_y_32 = last_image_bottom_y  # Y position for the thirty-second line image\n",
    "    \n",
    "        # Additional image above the line image\n",
    "        pdf.image(additional_image_path_32, x=5, y=image_y_32 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "    \n",
    "        # Line image\n",
    "        pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_32, w=image_width, h=line_image_height)\n",
    "    \n",
    "        # Rectangle aligned to the middle of the line image vertically\n",
    "        rect_y_32 = image_y_32 + (line_image_height / 2) - (rect_height / 2)\n",
    "        pdf.set_fill_color(0, 0, 0)\n",
    "        pdf.set_draw_color(0, 0, 0)\n",
    "        pdf.rect(S32, rect_y_32, 1, rect_height, 'F')\n",
    "    \n",
    "        # Text on top of the rectangle\n",
    "        pdf.set_xy(S32 - 3, rect_y_32 - 10)  # Adjust the position as needed\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, T32)\n",
    "    \n",
    "        # Text next to the additional image\n",
    "        alpha_x_32 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_32, image_y_32 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, Param32)\n",
    "    \n",
    "        pdf.set_fill_color(*ALHO32)\n",
    "        pdf.set_draw_color(*ALHO32)\n",
    "    \n",
    "        right_rect_width_Small = text_width = pdf.get_string_width(ParmaA32) + 2\n",
    "    \n",
    "        pdf.rect(175, image_y_32 - additional_image_size - 13, right_rect_width_Small, right_rect_height_Small, 'DF')\n",
    "    \n",
    "        alpha_x_A32 = 175  # Adjust the spacing as needed\n",
    "        pdf.set_xy(alpha_x_A32, image_y_32 - additional_image_size - 15)\n",
    "        pdf.set_font('Arial', 'B', 10)\n",
    "        pdf.cell(40, 10, ParmaA32)\n",
    "    \n",
    "        text_below_line_y32 = image_y_32 + line_image_height + 5\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(image_start_x, text_below_line_y32 + 3)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, REC32)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(33, text_below_line_y32 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND1)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(99, text_below_line_y32 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND2)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(166, text_below_line_y32 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 10)\n",
    "        pdf.cell(40, 10, UND3)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(66, text_below_line_y32 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT61)\n",
    "    \n",
    "        # Text below the line image\n",
    "        pdf.set_xy(139, text_below_line_y32 - 5)  # Automatically aligned with the line image\n",
    "        pdf.set_font('Arial', '', 12)\n",
    "        pdf.cell(40, 10, PAT62)\n",
    "\n",
    "        last_image_bottom_y = last_image_bottom_y + 50\n",
    "\n",
    "\n",
    "        SOR = SOR + 1\n",
    "\n",
    "    if SOR == 4:\n",
    "        SOR = 0\n",
    "        pdf.add_page() \n",
    "        last_image_bottom_y = 50  # Starting parameter for the first display of image.\n",
    "    \n",
    "\n",
    "    \n",
    "    ##### next page\n",
    "    \n",
    "    pdf.add_page()\n",
    "    # Set the font for the page\n",
    "    pdf.set_font('Arial', '', 12)\n",
    "\n",
    "    image_y_3 = 35  # Y position for the first line image\n",
    "\n",
    "    # Additional image above the line image\n",
    "    pdf.image(additional_image_path_1, x=5, y=image_y_3 - additional_image_size - 15, w=additional_image_size, h=additional_image_size)\n",
    "\n",
    "    # Line image\n",
    "    pdf.image(r'D:\\Saukhiaya pdf\\Vertical1.jpg', x=image_start_x, y=image_y_3, w=image_width, h=line_image_height)\n",
    "\n",
    "    # Rectangle aligned to the middle of the line image vertically\n",
    "    rect_y_3 = image_y_3 + (line_image_height / 2) - (rect_height / 2)\n",
    "    pdf.set_fill_color(0, 0, 0)\n",
    "    pdf.set_draw_color(0, 0, 0)\n",
    "    pdf.rect(S1, rect_y_3, 1, rect_height, 'F')\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    # Text on top of the rectangle\n",
    "    pdf.set_xy(S1 - 3, rect_y_3 - 10)  # Adjust the position as needed\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.cell(40, 10, T1)\n",
    "\n",
    "    # Text next to the additional image\n",
    "    alpha_x_3 = 5 + additional_image_size + 10  # Adjust the spacing as needed\n",
    "    pdf.set_xy(alpha_x_3, image_y_3 - additional_image_size - 15)\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.cell(40, 10, REC5)\n",
    "\n",
    "\n",
    "\n",
    "    text_below_line_y = image_y_3 + line_image_height + 5  # Adjust spacing as needed\n",
    "\n",
    "    # Text below the line image\n",
    "    pdf.set_xy(image_start_x, text_below_line_y)  # Automatically aligned with the line image\n",
    "    pdf.set_font('Arial', '', 10)\n",
    "    pdf.cell(40, 10, Param5)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    ##### next page \n",
    "    pdf.add_page()\n",
    "    # Set the font for the page\n",
    "    pdf.set_font('Arial', '', 12)\n",
    "    \n",
    "    # Set the initial y position for the first parameter\n",
    "    y_pos = 10\n",
    "    \n",
    "    # Add each parameter from the list to the page\n",
    "    for parameter in parameters_list:\n",
    "        pdf.set_xy(10, y_pos)\n",
    "        pdf.cell(0, 10, parameter, 0, 1)\n",
    "        y_pos += 10  # Move to the next line position for the next parame\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    # Save the PDF\n",
    "    file_path = r'D:\\Saukhiaya pdf\\output_file89.pdf'\n",
    "    pdf.output(file_path)\n",
    "\n",
    "\n",
    "\n",
    "            \n",
    "EHRfunctiontest(json_data)\n",
    "   \n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2cb229ff-530d-42d2-8a99-3262df28e519",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f289d532-daf7-4407-90e9-837934951968",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (338852513.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[17], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    ehr_package/\u001b[0m\n\u001b[1;37m                ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "ehr_package/\n",
    "|-- ehr/\n",
    "|   |-- __init__.py\n",
    "|   |-- ehr_functions.py\n",
    "|-- setup.py\n",
    "|-- README.md\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f456bdd-9e09-4c41-a573-ecc75c785693",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
